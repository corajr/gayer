// Generated by BUCKLESCRIPT VERSION 3.1.5, PLEASE EDIT WITH CARE

import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as T$Gayer from "./T.bs.js";
import * as Layer$Gayer from "../Layer.bs.js";
import * as ReasonReact from "reason-react/src/ReasonReact.js";
import * as BsReactDnd__DragSource from "@ahrefs/bs-react-dnd/src/BsReactDnd__DragSource.js";
import * as BsReactDnd__DropTarget from "@ahrefs/bs-react-dnd/src/BsReactDnd__DropTarget.js";

var DropTargetSpec = BsReactDnd__DropTarget.MakeSpec(/* module */[]);

var spec = {
  hover: (function (props, monitor, _) {
      var dragItem = monitor.getItem();
      var hoverId = props.id;
      if (!(dragItem == null) && dragItem.id !== hoverId) {
        return props.moveCard(dragItem.id, hoverId);
      } else {
        return /* () */0;
      }
    })
};

function collect(connect, _) {
  return {
          connectDropTarget: connect.dropTarget()
        };
}

var DropTargetWrapper = BsReactDnd__DropTarget.Make(/* module */[
      /* itemType */T$Gayer.itemType,
      /* spec */spec,
      /* collect */collect
    ]);

var DragSourceSpec = BsReactDnd__DragSource.MakeSpec(/* module */[]);

var spec$1 = {
  beginDrag: (function (props, _, _$1) {
      return {
              id: props.id
            };
    })
};

function collect$1(connect, monitor) {
  return {
          connectDragSource: connect.dragSource(),
          isDragging: monitor.isDragging()
        };
}

var DragSourceWrapper = BsReactDnd__DragSource.Make(/* module */[
      /* itemType */T$Gayer.itemType,
      /* spec */spec$1,
      /* collect */collect$1
    ]);

var component = ReasonReact.statelessComponent("Card");

function make(id, layer, moveCard, setRef, _) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function () {
              return ReasonReact.element(/* None */0, /* None */0, Curry._2(DropTargetWrapper[/* make */4], /* Some */[{
                                id: id,
                                moveCard: moveCard
                              }], (function (dropTarget) {
                                return ReasonReact.element(/* None */0, /* None */0, Curry._2(DragSourceWrapper[/* make */4], /* Some */[{
                                                  id: id
                                                }], (function (dragSource) {
                                                  var match = dragSource.isDragging;
                                                  return dropTarget.connectDropTarget(dragSource.connectDragSource(React.createElement("div", {
                                                                      style: {
                                                                        backgroundColor: "black",
                                                                        border: "1px dashed gray",
                                                                        cursor: "move",
                                                                        marginBottom: ".5rem",
                                                                        padding: "0.5rem 1rem",
                                                                        opacity: match ? "0" : "1"
                                                                      }
                                                                    }, ReasonReact.element(/* None */0, /* None */0, Layer$Gayer.make(layer, /* Some */[setRef], /* array */[])))));
                                                })));
                              })));
            }),
          /* initialState */component[/* initialState */10],
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */component[/* reducer */12],
          /* subscriptions */component[/* subscriptions */13],
          /* jsElementWrapped */component[/* jsElementWrapped */14]
        ];
}

export {
  DropTargetSpec ,
  DropTargetWrapper ,
  DragSourceSpec ,
  DragSourceWrapper ,
  component ,
  make ,
  
}
/* DropTargetSpec Not a pure module */
