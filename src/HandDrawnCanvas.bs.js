// Generated by BUCKLESCRIPT VERSION 4.0.3, PLEASE EDIT WITH CARE

import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as ReasonReact from "reason-react/src/ReasonReact.js";
import * as Canvas$Gayer from "./Canvas.bs.js";
import * as Js_primitive from "bs-platform/lib/es6/js_primitive.js";

var component = ReasonReact.reducerComponent("HandDrawnCanvas");

function getXY(evt) {
  var target = evt.target;
  var rect = target.getBoundingClientRect();
  return /* tuple */[
          evt.clientX - rect.left | 0,
          evt.clientY - rect.top | 0
        ];
}

function make(setRef, _, _$1, _$2) {
  var handleMouseDown = function (_, param) {
    param[/* state */1][/* mouseDown */1][0] = true;
    return /* () */0;
  };
  var handleMouseUp = function (_, param) {
    param[/* state */1][/* mouseDown */1][0] = false;
    return /* () */0;
  };
  var handleMouseMove = function ($$event, param) {
    var state = param[/* state */1];
    var match = state[/* mouseDown */1][0];
    var match$1 = state[/* canvasRef */0][0];
    if (match && match$1 !== undefined) {
      var match$2 = getXY($$event);
      var ctx = Js_primitive.valFromOption(match$1).getContext("2d");
      ctx.beginPath();
      ctx.fillStyle = "white";
      Canvas$Gayer.Ctx[/* circle */4](ctx, match$2[0], match$2[1], 15);
      ctx.fill();
      ctx.closePath();
      return /* () */0;
    } else {
      return /* () */0;
    }
  };
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (self) {
              return React.createElement("canvas", {
                          ref: (function (aRef) {
                              Curry._1(setRef, aRef);
                              var maybeRef = (aRef == null) ? undefined : Js_primitive.some(aRef);
                              self[/* state */1][/* canvasRef */0][0] = maybeRef;
                              return /* () */0;
                            }),
                          style: {
                            opacity: "0.0"
                          },
                          height: "480",
                          width: "480",
                          onMouseDown: Curry._1(self[/* handle */0], handleMouseDown),
                          onMouseMove: Curry._1(self[/* handle */0], handleMouseMove),
                          onMouseOut: Curry._1(self[/* handle */0], handleMouseUp),
                          onMouseUp: Curry._1(self[/* handle */0], handleMouseUp)
                        });
            }),
          /* initialState */(function () {
              return /* record */[
                      /* canvasRef : record */[/* contents */undefined],
                      /* mouseDown : record */[/* contents */false]
                    ];
            }),
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */(function (_, _$1) {
              return /* NoUpdate */0;
            }),
          /* subscriptions */component[/* subscriptions */13],
          /* jsElementWrapped */component[/* jsElementWrapped */14]
        ];
}

export {
  component ,
  getXY ,
  make ,
  
}
/* component Not a pure module */
