// Generated by BUCKLESCRIPT VERSION 4.0.3, PLEASE EDIT WITH CARE

import * as Belt_List from "bs-platform/lib/es6/belt_List.js";
import * as Belt_Option from "bs-platform/lib/es6/belt_Option.js";
import * as ReasonReact from "reason-react/src/ReasonReact.js";
import * as Js_primitive from "bs-platform/lib/es6/js_primitive.js";
import * as MaterialUi_Helpers from "@jsiebern/bs-material-ui/src/MaterialUi_Helpers.bs.js";
import * as Slider from "@material-ui/lab/Slider/Slider";

function to_string(param) {
  switch (param.tag | 0) {
    case 0 : 
        return "root";
    case 1 : 
        return "container";
    case 2 : 
        return "track";
    case 3 : 
        return "trackBefore";
    case 4 : 
        return "trackAfter";
    case 5 : 
        return "thumb";
    case 6 : 
        return "vertical";
    case 7 : 
        return "disabled";
    case 8 : 
        return "jumped";
    case 9 : 
        return "focused";
    case 10 : 
        return "activated";
    
  }
}

function to_obj(listOfClasses) {
  return Belt_List.reduce(listOfClasses, { }, (function (obj, classType) {
                obj[to_string(classType)] = classType[0];
                return obj;
              }));
}

var Classes = /* module */[
  /* to_string */to_string,
  /* to_obj */to_obj
];

function make(className, component, disabled, reverse, vertical, max, min, step, value, classes, onChange, style, children) {
  var tmp = { };
  if (className !== undefined) {
    tmp.className = Js_primitive.valFromOption(className);
  }
  var tmp$1 = Belt_Option.map(component, MaterialUi_Helpers.unwrapValue);
  if (tmp$1 !== undefined) {
    tmp.component = Js_primitive.valFromOption(tmp$1);
  }
  if (disabled !== undefined) {
    tmp.disabled = Js_primitive.valFromOption(disabled);
  }
  if (reverse !== undefined) {
    tmp.reverse = Js_primitive.valFromOption(reverse);
  }
  if (vertical !== undefined) {
    tmp.vertical = Js_primitive.valFromOption(vertical);
  }
  if (max !== undefined) {
    tmp.max = Js_primitive.valFromOption(max);
  }
  if (min !== undefined) {
    tmp.min = Js_primitive.valFromOption(min);
  }
  if (step !== undefined) {
    tmp.step = Js_primitive.valFromOption(step);
  }
  if (value !== undefined) {
    tmp.value = Js_primitive.valFromOption(value);
  }
  if (onChange !== undefined) {
    tmp.onChange = Js_primitive.valFromOption(onChange);
  }
  var tmp$2 = Belt_Option.map(classes, to_obj);
  if (tmp$2 !== undefined) {
    tmp.classes = Js_primitive.valFromOption(tmp$2);
  }
  if (style !== undefined) {
    tmp.style = Js_primitive.valFromOption(style);
  }
  return ReasonReact.wrapJsForReason(Slider.default, tmp, children);
}

export {
  Classes ,
  make ,
  
}
/* ReasonReact Not a pure module */
