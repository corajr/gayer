// Generated by BUCKLESCRIPT VERSION 4.0.3, PLEASE EDIT WITH CARE


var rgbToHsvFloat = function (r,g,b){
  var max = Math.max(r, g, b), min = Math.min(r, g, b);
  var h, s, v = max;

  var d = max - min;
  s = max === 0 ? 0 : d / max;

  if(max == min) {
  h = 0; // achromatic
}
    else {
  switch(max) {
    case r: h = (g - b) / d + (g < b ? 6 : 0); break;
    case g: h = (b - r) / d + 2; break;
    case b: h = (r - g) / d + 4; break;
  }
    h /= 6;
}
    return [h, s, v];
     };

var rgbToHslFloat = function (r,g,b){

     var max = Math.max(r, g, b), min = Math.min(r, g, b);
     var h, s, l = (max + min) / 2;

     if(max == min) {
     h = s = 0; // achromatic
     }
     else {
     var d = max - min;
     s = l > 0.5 ? d / (2 - max - min) : d / (max + min);
     switch(max) {
     case r: h = (g - b) / d + (g < b ? 6 : 0); break;
     case g: h = (b - r) / d + 2; break;
     case b: h = (r - g) / d + 4; break;
     }

     h /= 6;
     }

     return [h, s, l];
};

function hsl($staropt$star, h, s, l) {
  var a = $staropt$star !== undefined ? $staropt$star : 1.0;
  return "hsl(" + (h.toString() + ("turn," + ((s * 100.0).toString() + ("%," + ((l * 100.0).toString() + ("%," + (a.toString() + ")")))))));
}

function gray(l) {
  var color = (255.0 * l | 0).toString(16);
  return "#" + (color + (color + color));
}

export {
  rgbToHsvFloat ,
  rgbToHslFloat ,
  hsl ,
  gray ,
  
}
/* No side effect */
