// Generated by BUCKLESCRIPT VERSION 4.0.3, PLEASE EDIT WITH CARE

import * as Curry from "bs-platform/lib/es6/curry.js";
import * as DocumentRe from "bs-webapi/src/dom/nodes/DocumentRe.js";
import * as Caml_string from "bs-platform/lib/es6/caml_string.js";
import * as Js_primitive from "bs-platform/lib/es6/js_primitive.js";
import * as Option$Rationale from "rationale/src/Option.js";

function addKeyListenersToBody(keyDownListener, keyUpListener, keyboardManagerState) {
  var maybeBody = Curry._2(Option$Rationale.Infix[/* >>= */0], DocumentRe.asHtmlDocument(document), (function (prim) {
          return Js_primitive.nullable_to_opt(prim.body);
        }));
  if (maybeBody !== undefined) {
    var bodyEl = Js_primitive.valFromOption(maybeBody);
    bodyEl.addEventListener("keydown", keyDownListener);
    keyboardManagerState[/* keyDownListener */0][0] = keyDownListener;
    bodyEl.addEventListener("keyup", keyUpListener);
    keyboardManagerState[/* keyUpListener */1][0] = keyUpListener;
    return /* () */0;
  } else {
    return /* () */0;
  }
}

function removeKeyListenersFromBody(keyboardManagerState) {
  var maybeBody = Curry._2(Option$Rationale.Infix[/* >>= */0], DocumentRe.asHtmlDocument(document), (function (prim) {
          return Js_primitive.nullable_to_opt(prim.body);
        }));
  if (maybeBody !== undefined) {
    var bodyEl = Js_primitive.valFromOption(maybeBody);
    var match = keyboardManagerState[/* keyDownListener */0][0];
    if (match !== undefined) {
      bodyEl.removeEventListener("keydown", match);
    }
    var match$1 = keyboardManagerState[/* keyUpListener */1][0];
    if (match$1 !== undefined) {
      bodyEl.removeEventListener("keyup", match$1);
      return /* () */0;
    } else {
      return /* () */0;
    }
  } else {
    return /* () */0;
  }
}

function keyCode(e) {
  var k = e.key;
  if (k.length === 1) {
    return Caml_string.get(k, 0);
  } else {
    return 0;
  }
}

export {
  addKeyListenersToBody ,
  removeKeyListenersFromBody ,
  keyCode ,
  
}
/* DocumentRe Not a pure module */
