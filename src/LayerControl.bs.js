// Generated by BUCKLESCRIPT VERSION 4.0.3, PLEASE EDIT WITH CARE

import * as Block from "bs-platform/lib/es6/block.js";
import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as Layer$Gayer from "./Layer.bs.js";
import * as ReasonReact from "reason-react/src/ReasonReact.js";
import * as Canvas$Gayer from "./Canvas.bs.js";
import * as Js_primitive from "bs-platform/lib/es6/js_primitive.js";
import * as Belt_MapString from "bs-platform/lib/es6/belt_MapString.js";
import * as MaterialUIIcons from "bs-material-ui-icons/src/MaterialUIIcons.js";
import * as MaterialUi_Card from "@jsiebern/bs-material-ui/src/MaterialUi_Card.bs.js";
import * as ReaderType$Gayer from "./ReaderType.bs.js";
import * as FloatSlider$Gayer from "./FloatSlider.bs.js";
import * as ImageSelect$Gayer from "./ImageSelect.bs.js";
import * as LayerSelect$Gayer from "./LayerSelect.bs.js";
import * as MaterialUi_Switch from "@jsiebern/bs-material-ui/src/MaterialUi_Switch.bs.js";
import * as MaterialUi_Collapse from "@jsiebern/bs-material-ui/src/MaterialUi_Collapse.bs.js";
import * as MaterialUi_CardMedia from "@jsiebern/bs-material-ui/src/MaterialUi_CardMedia.bs.js";
import * as MaterialUi_FormGroup from "@jsiebern/bs-material-ui/src/MaterialUi_FormGroup.bs.js";
import * as MaterialUi_TextField from "@jsiebern/bs-material-ui/src/MaterialUi_TextField.bs.js";
import * as MaterialUi_CardHeader from "@jsiebern/bs-material-ui/src/MaterialUi_CardHeader.bs.js";
import * as MaterialUi_IconButton from "@jsiebern/bs-material-ui/src/MaterialUi_IconButton.bs.js";
import * as MaterialUi_Typography from "@jsiebern/bs-material-ui/src/MaterialUi_Typography.bs.js";
import * as MaterialUi_CardContent from "@jsiebern/bs-material-ui/src/MaterialUi_CardContent.bs.js";
import * as MaterialUi_FormControl from "@jsiebern/bs-material-ui/src/MaterialUi_FormControl.bs.js";
import * as NumericTextField$Gayer from "./NumericTextField.bs.js";
import * as PitchSetSelector$Gayer from "./PitchSetSelector.bs.js";
import * as MaterialUi_FormControlLabel from "@jsiebern/bs-material-ui/src/MaterialUi_FormControlLabel.bs.js";
import * as TransformMatrixSettings$Gayer from "./TransformMatrixSettings.bs.js";
import * as CompositeOperationSelect$Gayer from "./CompositeOperationSelect.bs.js";

function renderLayerPreview(layer, _, _$1, saveTick, onUnmount, layerRefs) {
  var layerKey = Layer$Gayer.getLayerKey(layer);
  var savePreviewRef = function (aRef) {
    if (aRef == null) {
      return /* () */0;
    } else {
      return Curry._3(saveTick, onUnmount, layerKey + "preview", (function () {
                    var match = Belt_MapString.get(layerRefs[0], layerKey);
                    if (match !== undefined) {
                      var ctx = aRef.getContext("2d");
                      ctx.fillStyle = "black";
                      ctx.fillRect(0, 0, 120, 120);
                      ctx.drawImage(Js_primitive.valFromOption(match), 0, 0, 120, 120);
                      return /* () */0;
                    } else {
                      return /* () */0;
                    }
                  }));
    }
  };
  var match = layer[/* content */0];
  var tmp;
  var exit = 0;
  if (typeof match === "number") {
    exit = 1;
  } else {
    switch (match.tag | 0) {
      case 0 : 
      case 2 : 
      case 3 : 
      case 8 : 
      case 14 : 
          tmp = null;
          break;
      default:
        exit = 1;
    }
  }
  if (exit === 1) {
    tmp = React.createElement("div", undefined, React.createElement("canvas", {
              ref: savePreviewRef,
              height: "120",
              width: "120"
            }));
  }
  return React.createElement("div", {
              style: {
                display: "flex"
              }
            }, tmp);
}

var component = ReasonReact.reducerComponent("LayerControl-Gayer");

function make(layer, layerKeys, layerRefs, onSetRef, saveTick, changeLayer, savedImages, _, _$1, _$2) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (self) {
              var match = layer[/* content */0];
              var tmp;
              if (typeof match === "number") {
                tmp = ReasonReact.element(undefined, undefined, MaterialUi_Typography.make(undefined, undefined, /* TextSecondary */-507693849, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, /* array */["[no options]"]));
              } else {
                switch (match.tag | 0) {
                  case 0 : 
                      tmp = ReasonReact.element(undefined, undefined, MaterialUi_TextField.make(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, "style", /* Normal */-453122489, undefined, undefined, undefined, (function (evt) {
                                  var value = evt.target.value;
                                  return Curry._2(changeLayer, layer, /* record */[
                                              /* content : Fill */Block.__(0, [value]),
                                              /* enabled */layer[/* enabled */1],
                                              /* alpha */layer[/* alpha */2],
                                              /* compositeOperation */layer[/* compositeOperation */3],
                                              /* rotation */layer[/* rotation */4],
                                              /* transformMatrix */layer[/* transformMatrix */5],
                                              /* filters */layer[/* filters */6],
                                              /* id */layer[/* id */7]
                                            ]);
                                }), undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, /* `String */[
                                -976970511,
                                match[0]
                              ], undefined, /* array */[]));
                      break;
                  case 3 : 
                      tmp = ReasonReact.element(undefined, undefined, MaterialUi_TextField.make(undefined, undefined, undefined, undefined, undefined, undefined, undefined, true, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, true, undefined, undefined, (function (evt) {
                                  var value = evt.target.value;
                                  return Curry._2(changeLayer, layer, /* record */[
                                              /* content : Text */Block.__(3, [value]),
                                              /* enabled */layer[/* enabled */1],
                                              /* alpha */layer[/* alpha */2],
                                              /* compositeOperation */layer[/* compositeOperation */3],
                                              /* rotation */layer[/* rotation */4],
                                              /* transformMatrix */layer[/* transformMatrix */5],
                                              /* filters */layer[/* filters */6],
                                              /* id */layer[/* id */7]
                                            ]);
                                }), undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, /* `String */[
                                -976970511,
                                match[0]
                              ], undefined, /* array */[]));
                      break;
                  case 5 : 
                      tmp = ReasonReact.element(undefined, undefined, ImageSelect$Gayer.make(match[0], savedImages, (function (newUrl) {
                                  return Curry._2(changeLayer, layer, /* record */[
                                              /* content : Image */Block.__(5, [newUrl]),
                                              /* enabled */layer[/* enabled */1],
                                              /* alpha */layer[/* alpha */2],
                                              /* compositeOperation */layer[/* compositeOperation */3],
                                              /* rotation */layer[/* rotation */4],
                                              /* transformMatrix */layer[/* transformMatrix */5],
                                              /* filters */layer[/* filters */6],
                                              /* id */layer[/* id */7]
                                            ]);
                                }), /* array */[]));
                      break;
                  case 8 : 
                      tmp = React.createElement("div", undefined, ReasonReact.element(undefined, undefined, PitchSetSelector$Gayer.make(match[0], (function (newPitches) {
                                      return Curry._2(changeLayer, layer, /* record */[
                                                  /* content : PitchClasses */Block.__(8, [newPitches]),
                                                  /* enabled */layer[/* enabled */1],
                                                  /* alpha */layer[/* alpha */2],
                                                  /* compositeOperation */layer[/* compositeOperation */3],
                                                  /* rotation */layer[/* rotation */4],
                                                  /* transformMatrix */layer[/* transformMatrix */5],
                                                  /* filters */layer[/* filters */6],
                                                  /* id */layer[/* id */7]
                                                ]);
                                    }), /* array */[])));
                      break;
                  case 9 : 
                  case 10 : 
                      tmp = React.createElement("div", undefined, ReasonReact.element(undefined, undefined, MaterialUi_Typography.make(undefined, undefined, /* TextSecondary */-507693849, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, /* array */["If keys are stuck, press SPACE to clear."])));
                      break;
                  case 1 : 
                  case 2 : 
                  case 4 : 
                  case 6 : 
                  case 7 : 
                  case 11 : 
                  case 12 : 
                      tmp = React.createElement("div", undefined);
                      break;
                  case 13 : 
                      var reglOptions = match[0];
                      var tmp$1;
                      if (reglOptions.tag) {
                        var opts = reglOptions[0];
                        tmp$1 = React.createElement("div", undefined, ReasonReact.element(undefined, undefined, LayerSelect$Gayer.make(layerKeys, (function (newKey) {
                                        return Curry._2(changeLayer, layer, /* record */[
                                                    /* content : Regl */Block.__(13, [/* Displacement */Block.__(1, [/* record */[
                                                              /* displacementSourceLayer */newKey,
                                                              /* displacementMap */opts[/* displacementMap */1]
                                                            ]])]),
                                                    /* enabled */layer[/* enabled */1],
                                                    /* alpha */layer[/* alpha */2],
                                                    /* compositeOperation */layer[/* compositeOperation */3],
                                                    /* rotation */layer[/* rotation */4],
                                                    /* transformMatrix */layer[/* transformMatrix */5],
                                                    /* filters */layer[/* filters */6],
                                                    /* id */layer[/* id */7]
                                                  ]);
                                      }), opts[/* displacementSourceLayer */0], /* array */[])), ReasonReact.element(undefined, undefined, LayerSelect$Gayer.make(layerKeys, (function (newKey) {
                                        return Curry._2(changeLayer, layer, /* record */[
                                                    /* content : Regl */Block.__(13, [/* Displacement */Block.__(1, [/* record */[
                                                              /* displacementSourceLayer */opts[/* displacementSourceLayer */0],
                                                              /* displacementMap */newKey
                                                            ]])]),
                                                    /* enabled */layer[/* enabled */1],
                                                    /* alpha */layer[/* alpha */2],
                                                    /* compositeOperation */layer[/* compositeOperation */3],
                                                    /* rotation */layer[/* rotation */4],
                                                    /* transformMatrix */layer[/* transformMatrix */5],
                                                    /* filters */layer[/* filters */6],
                                                    /* id */layer[/* id */7]
                                                  ]);
                                      }), opts[/* displacementMap */1], /* array */[])));
                      } else {
                        var opts$1 = reglOptions[0];
                        tmp$1 = ReasonReact.element(undefined, undefined, LayerSelect$Gayer.make(layerKeys, (function (newKey) {
                                    return Curry._2(changeLayer, layer, /* record */[
                                                /* content : Regl */Block.__(13, [/* Sobel */Block.__(0, [/* record */[/* sourceLayer */newKey]])]),
                                                /* enabled */layer[/* enabled */1],
                                                /* alpha */layer[/* alpha */2],
                                                /* compositeOperation */layer[/* compositeOperation */3],
                                                /* rotation */layer[/* rotation */4],
                                                /* transformMatrix */layer[/* transformMatrix */5],
                                                /* filters */layer[/* filters */6],
                                                /* id */layer[/* id */7]
                                              ]);
                                  }), opts$1[/* sourceLayer */0], /* array */[]));
                      }
                      tmp = React.createElement("div", undefined, tmp$1);
                      break;
                  case 14 : 
                      tmp = React.createElement("div", undefined, ReasonReact.element(undefined, undefined, ReaderType$Gayer.make(match[0], (function (newReaderType) {
                                      return Curry._2(changeLayer, layer, /* record */[
                                                  /* content : Reader */Block.__(14, [newReaderType]),
                                                  /* enabled */layer[/* enabled */1],
                                                  /* alpha */layer[/* alpha */2],
                                                  /* compositeOperation */layer[/* compositeOperation */3],
                                                  /* rotation */layer[/* rotation */4],
                                                  /* transformMatrix */layer[/* transformMatrix */5],
                                                  /* filters */layer[/* filters */6],
                                                  /* id */layer[/* id */7]
                                                ]);
                                    }), /* array */[])));
                      break;
                  
                }
              }
              var match$1 = layer[/* content */0];
              var tmp$2;
              var exit = 0;
              if (typeof match$1 === "number" || match$1.tag !== 3) {
                exit = 1;
              } else {
                tmp$2 = null;
              }
              if (exit === 1) {
                var match$2 = self[/* state */1][/* expanded */0];
                tmp$2 = React.createElement("div", {
                      style: {
                        marginRight: "24px",
                        marginBottom: "24px",
                        alignItems: "flex-start",
                        flexDirection: "column"
                      }
                    }, ReasonReact.element(undefined, undefined, FloatSlider$Gayer.make(undefined, undefined, "Alpha", layer[/* alpha */2], undefined, (function (value) {
                                return Curry._2(changeLayer, layer, /* record */[
                                            /* content */layer[/* content */0],
                                            /* enabled */layer[/* enabled */1],
                                            /* alpha */value,
                                            /* compositeOperation */layer[/* compositeOperation */3],
                                            /* rotation */layer[/* rotation */4],
                                            /* transformMatrix */layer[/* transformMatrix */5],
                                            /* filters */layer[/* filters */6],
                                            /* id */layer[/* id */7]
                                          ]);
                              }), /* array */[])), ReasonReact.element(undefined, undefined, MaterialUi_FormGroup.make(undefined, true, undefined, undefined, /* array */[ReasonReact.element(undefined, undefined, CompositeOperationSelect$Gayer.make(layer[/* compositeOperation */3], (function (newOperation) {
                                          return Curry._2(changeLayer, layer, /* record */[
                                                      /* content */layer[/* content */0],
                                                      /* enabled */layer[/* enabled */1],
                                                      /* alpha */layer[/* alpha */2],
                                                      /* compositeOperation */newOperation,
                                                      /* rotation */layer[/* rotation */4],
                                                      /* transformMatrix */layer[/* transformMatrix */5],
                                                      /* filters */layer[/* filters */6],
                                                      /* id */layer[/* id */7]
                                                    ]);
                                        }), /* array */[]))])), ReasonReact.element(undefined, undefined, MaterialUi_FormGroup.make(undefined, true, undefined, undefined, /* array */[
                              React.createElement("div", {
                                    style: {
                                      flexGrow: "1"
                                    }
                                  }),
                              ReasonReact.element(undefined, undefined, MaterialUi_IconButton.make(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, Curry._1(self[/* handle */0], (function (_, param) {
                                              return Curry._1(param[/* send */3], /* ToggleExpanded */0);
                                            })), undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, {
                                        marginRight: "-16px"
                                      }, /* array */[match$2 ? React.createElement("span", {
                                                style: {
                                                  transform: "rotate(180deg)"
                                                }
                                              }, ReasonReact.element(undefined, undefined, MaterialUIIcons.ExpandMore[/* make */0](/* array */[]))) : ReasonReact.element(undefined, undefined, MaterialUIIcons.ExpandMore[/* make */0](/* array */[]))]))
                            ])));
              }
              return ReasonReact.element(undefined, undefined, MaterialUi_Card.make(undefined, undefined, undefined, undefined, undefined, undefined, undefined, /* array */[
                              ReasonReact.element(undefined, undefined, MaterialUi_CardHeader.make(Js_primitive.some(ReasonReact.element(undefined, undefined, MaterialUi_IconButton.make(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, (function () {
                                                      return Curry._2(changeLayer, layer, undefined);
                                                    }), undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, /* array */[ReasonReact.element(undefined, undefined, MaterialUIIcons.Delete[/* make */0](/* array */[]))]))), Js_primitive.some(Layer$Gayer.icon_of_layerContent(layer[/* content */0])), undefined, undefined, undefined, Js_primitive.some(ReasonReact.element(undefined, undefined, MaterialUi_Typography.make(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, /* Subheading */148169314, undefined, {
                                                    marginTop: "-4px"
                                                  }, /* array */[Layer$Gayer.readable_string_type_of_layerContent(layer[/* content */0])]))), undefined, {
                                        paddingTop: "8px",
                                        paddingBottom: "0px"
                                      }, /* array */[])),
                              React.createElement("div", {
                                    style: {
                                      display: "flex",
                                      justifyContent: "flex-start"
                                    }
                                  }, ReasonReact.element(undefined, undefined, MaterialUi_CardMedia.make(undefined, undefined, undefined, "dummy", undefined, undefined, /* array */[renderLayerPreview(layer, changeLayer, Curry._1(onSetRef, layer), saveTick, self[/* onUnmount */4], layerRefs)])), ReasonReact.element(undefined, undefined, MaterialUi_CardContent.make(undefined, undefined, undefined, {
                                            flexGrow: "1"
                                          }, /* array */[tmp])), tmp$2),
                              ReasonReact.element(undefined, undefined, MaterialUi_Collapse.make(undefined, undefined, undefined, self[/* state */1][/* expanded */0], undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, /* array */[ReasonReact.element(undefined, undefined, MaterialUi_CardContent.make(undefined, undefined, undefined, {
                                                  display: "flex",
                                                  flexDirection: "row",
                                                  justifyContent: "space-between"
                                                }, /* array */[
                                                  ReasonReact.element(undefined, undefined, MaterialUi_FormControl.make(undefined, /* `String */[
                                                            -976970511,
                                                            "fieldset"
                                                          ], undefined, undefined, undefined, undefined, undefined, undefined, undefined, /* array */[
                                                            ReasonReact.element(undefined, undefined, MaterialUi_FormGroup.make(undefined, undefined, undefined, undefined, /* array */[ReasonReact.element(undefined, undefined, MaterialUi_FormControlLabel.make(undefined, undefined, Js_primitive.some(ReasonReact.element(undefined, undefined, MaterialUi_Switch.make(/* `Bool */[
                                                                                            737456202,
                                                                                            layer[/* enabled */1]
                                                                                          ], undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, (function (_, value) {
                                                                                              return Curry._2(changeLayer, layer, /* record */[
                                                                                                          /* content */layer[/* content */0],
                                                                                                          /* enabled */value,
                                                                                                          /* alpha */layer[/* alpha */2],
                                                                                                          /* compositeOperation */layer[/* compositeOperation */3],
                                                                                                          /* rotation */layer[/* rotation */4],
                                                                                                          /* transformMatrix */layer[/* transformMatrix */5],
                                                                                                          /* filters */layer[/* filters */6],
                                                                                                          /* id */layer[/* id */7]
                                                                                                        ]);
                                                                                            }), undefined, "enabled", undefined, undefined, /* array */[]))), undefined, undefined, "Active (include in render)", undefined, undefined, undefined, undefined, undefined, /* array */[]))])),
                                                            ReasonReact.element(undefined, undefined, TransformMatrixSettings$Gayer.make(layer, changeLayer, /* array */[])),
                                                            ReasonReact.element(undefined, undefined, NumericTextField$Gayer.make(/* `Float */[
                                                                      365180284,
                                                                      Canvas$Gayer.radiansToDegrees(layer[/* rotation */4])
                                                                    ], "Rotation (degrees)", (function (value) {
                                                                        return Curry._2(changeLayer, layer, /* record */[
                                                                                    /* content */layer[/* content */0],
                                                                                    /* enabled */layer[/* enabled */1],
                                                                                    /* alpha */layer[/* alpha */2],
                                                                                    /* compositeOperation */layer[/* compositeOperation */3],
                                                                                    /* rotation */Canvas$Gayer.degreesToRadians(value),
                                                                                    /* transformMatrix */layer[/* transformMatrix */5],
                                                                                    /* filters */layer[/* filters */6],
                                                                                    /* id */layer[/* id */7]
                                                                                  ]);
                                                                      }), undefined, /* array */[]))
                                                          ])),
                                                  ReasonReact.element(undefined, undefined, MaterialUi_FormControl.make(undefined, /* `String */[
                                                            -976970511,
                                                            "fieldset"
                                                          ], undefined, undefined, undefined, undefined, undefined, undefined, {
                                                            display: "flex",
                                                            justifyContent: "flex-start"
                                                          }, /* array */[ReasonReact.element(undefined, undefined, MaterialUi_TextField.make(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, "filters", /* Normal */-453122489, undefined, undefined, undefined, (function (evt) {
                                                                        var value = evt.target.value;
                                                                        return Curry._2(changeLayer, layer, /* record */[
                                                                                    /* content */layer[/* content */0],
                                                                                    /* enabled */layer[/* enabled */1],
                                                                                    /* alpha */layer[/* alpha */2],
                                                                                    /* compositeOperation */layer[/* compositeOperation */3],
                                                                                    /* rotation */layer[/* rotation */4],
                                                                                    /* transformMatrix */layer[/* transformMatrix */5],
                                                                                    /* filters */value,
                                                                                    /* id */layer[/* id */7]
                                                                                  ]);
                                                                      }), undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, /* `String */[
                                                                      -976970511,
                                                                      layer[/* filters */6]
                                                                    ], undefined, /* array */[]))]))
                                                ]))]))
                            ]));
            }),
          /* initialState */(function () {
              return /* record */[/* expanded */false];
            }),
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */(function (_, state) {
              return /* Update */Block.__(0, [/* record */[/* expanded */!state[/* expanded */0]]]);
            }),
          /* subscriptions */component[/* subscriptions */13],
          /* jsElementWrapped */component[/* jsElementWrapped */14]
        ];
}

export {
  renderLayerPreview ,
  component ,
  make ,
  
}
/* component Not a pure module */
