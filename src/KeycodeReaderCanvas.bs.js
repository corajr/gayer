// Generated by BUCKLESCRIPT VERSION 4.0.3, PLEASE EDIT WITH CARE

import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as RotJs from "rot-js";
import * as ReasonReact from "reason-react/src/ReasonReact.js";
import * as Js_primitive from "bs-platform/lib/es6/js_primitive.js";
import * as RotDisplay$Gayer from "./RotDisplay.bs.js";

var component = ReasonReact.reducerComponent("KeycodeReaderCanvas-Gayer");

function make(_, _$1, setRef, _$2, _$3, _$4) {
  var setUpRot = function (theRef, param) {
    var state = param[/* state */1];
    var maybeParent = (theRef == null) ? undefined : Js_primitive.some(theRef);
    state[/* parentElRef */1][0] = maybeParent;
    var match = state[/* canvasRef */0][0];
    if (match !== undefined && !(theRef == null)) {
      var canvas = Js_primitive.valFromOption(match);
      canvas.appendChild(theRef);
      return Curry._1(setRef, Js_primitive.some(canvas));
    } else {
      return /* () */0;
    }
  };
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */(function (self) {
              var display = new RotJs.Display(RotDisplay$Gayer.defaultOptions);
              display.drawText(0, 0, "Press keys to play!");
              display.drawText(0, 8, "(SPC to clear)");
              self[/* state */1][/* canvasRef */0][0] = Js_primitive.some(display.getContainer());
              return Curry._1(self[/* onUnmount */4], (function () {
                            var match = self[/* state */1][/* canvasRef */0][0];
                            var match$1 = self[/* state */1][/* parentElRef */1][0];
                            if (match !== undefined && match$1 !== undefined) {
                              Js_primitive.valFromOption(match).removeChild(Js_primitive.valFromOption(match$1));
                              return /* () */0;
                            } else {
                              return /* () */0;
                            }
                          }));
            }),
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (self) {
              return React.createElement("div", {
                          ref: Curry._1(self[/* handle */0], setUpRot)
                        });
            }),
          /* initialState */(function () {
              return /* record */[
                      /* canvasRef : record */[/* contents */undefined],
                      /* parentElRef : record */[/* contents */undefined]
                    ];
            }),
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */(function (_, _$1) {
              return /* NoUpdate */0;
            }),
          /* subscriptions */component[/* subscriptions */13],
          /* jsElementWrapped */component[/* jsElementWrapped */14]
        ];
}

export {
  component ,
  make ,
  
}
/* component Not a pure module */
