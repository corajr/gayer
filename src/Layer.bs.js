// Generated by BUCKLESCRIPT VERSION 4.0.3, PLEASE EDIT WITH CARE

import * as Block from "bs-platform/lib/es6/block.js";
import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as Regl$Gayer from "./Regl.bs.js";
import * as Belt_Option from "bs-platform/lib/es6/belt_Option.js";
import * as Json_decode from "@glennsl/bs-json/src/Json_decode.bs.js";
import * as Json_encode from "@glennsl/bs-json/src/Json_encode.bs.js";
import * as Music$Gayer from "./Music.bs.js";
import * as ReasonReact from "reason-react/src/ReasonReact.js";
import * as Canvas$Gayer from "./Canvas.bs.js";
import * as Js_primitive from "bs-platform/lib/es6/js_primitive.js";
import * as Belt_MapString from "bs-platform/lib/es6/belt_MapString.js";
import * as MaterialUIIcons from "bs-material-ui-icons/src/MaterialUIIcons.js";
import * as MaterialUi_Card from "@jsiebern/bs-material-ui/src/MaterialUi_Card.bs.js";
import * as ReaderType$Gayer from "./ReaderType.bs.js";
import * as FloatSlider$Gayer from "./FloatSlider.bs.js";
import * as ImageSelect$Gayer from "./ImageSelect.bs.js";
import * as LayerSelect$Gayer from "./LayerSelect.bs.js";
import * as MaterialUi_Switch from "@jsiebern/bs-material-ui/src/MaterialUi_Switch.bs.js";
import * as CameraOptions$Gayer from "./CameraOptions.bs.js";
import * as MaterialUi_Collapse from "@jsiebern/bs-material-ui/src/MaterialUi_Collapse.bs.js";
import * as MaterialUi_CardMedia from "@jsiebern/bs-material-ui/src/MaterialUi_CardMedia.bs.js";
import * as MaterialUi_FormGroup from "@jsiebern/bs-material-ui/src/MaterialUi_FormGroup.bs.js";
import * as MaterialUi_TextField from "@jsiebern/bs-material-ui/src/MaterialUi_TextField.bs.js";
import * as AnalysisOptions$Gayer from "./AnalysisOptions.bs.js";
import * as MaterialUi_CardHeader from "@jsiebern/bs-material-ui/src/MaterialUi_CardHeader.bs.js";
import * as MaterialUi_IconButton from "@jsiebern/bs-material-ui/src/MaterialUi_IconButton.bs.js";
import * as MaterialUi_Typography from "@jsiebern/bs-material-ui/src/MaterialUi_Typography.bs.js";
import * as MaterialUi_CardContent from "@jsiebern/bs-material-ui/src/MaterialUi_CardContent.bs.js";
import * as MaterialUi_FormControl from "@jsiebern/bs-material-ui/src/MaterialUi_FormControl.bs.js";
import * as NumericTextField$Gayer from "./NumericTextField.bs.js";
import * as PitchSetSelector$Gayer from "./PitchSetSelector.bs.js";
import * as MaterialUi_FormControlLabel from "@jsiebern/bs-material-ui/src/MaterialUi_FormControlLabel.bs.js";
import * as CompositeOperationSelect$Gayer from "./CompositeOperationSelect.bs.js";

function readable_string_type_of_layerContent(param) {
  if (typeof param === "number") {
    switch (param) {
      case 0 : 
          return "Mouse";
      case 1 : 
          return "Webcam";
      case 2 : 
          return "MIDI Input";
      case 3 : 
          return "ASCII Reader";
      case 4 : 
          return "ASCII Writer";
      case 5 : 
          return "Histogram";
      
    }
  } else {
    switch (param.tag | 0) {
      case 0 : 
          return "Fill";
      case 1 : 
          return "Draw Commands";
      case 2 : 
          return "Draw Commands (global)";
      case 3 : 
          return "Slitscan";
      case 4 : 
          return "Image";
      case 5 : 
          return "Video";
      case 6 : 
          return "Analyzer";
      case 7 : 
          return "Pitch classes";
      case 8 : 
          return "Raw Audio Writer";
      case 9 : 
          return "Raw Audio Reader";
      case 10 : 
          return "Shader";
      case 11 : 
          return "Reader";
      
    }
  }
}

function string_type_of_layerContent(param) {
  if (typeof param === "number") {
    switch (param) {
      case 0 : 
          return "mouse";
      case 1 : 
          return "webcam";
      case 2 : 
          return "midi-keyboard";
      case 3 : 
          return "keycode-reader";
      case 4 : 
          return "keycode-writer";
      case 5 : 
          return "histogram";
      
    }
  } else {
    switch (param.tag | 0) {
      case 0 : 
          return "fill";
      case 1 : 
          return "draw";
      case 2 : 
          return "draw-global";
      case 3 : 
          return "slitscan";
      case 4 : 
          return "image";
      case 5 : 
          return "video";
      case 6 : 
          return "analyzer";
      case 7 : 
          return "pitch-classes";
      case 8 : 
          return "raw-audio-writer";
      case 9 : 
          return "raw-audio-reader";
      case 10 : 
          return "shader";
      case 11 : 
          return "reader";
      
    }
  }
}

function icon_of_layerContent(param) {
  if (typeof param === "number") {
    switch (param) {
      case 0 : 
          return ReasonReact.element(undefined, undefined, MaterialUIIcons.Brush[/* make */0](/* array */[]));
      case 1 : 
          return ReasonReact.element(undefined, undefined, MaterialUIIcons.Videocam[/* make */0](/* array */[]));
      case 2 : 
          return ReasonReact.element(undefined, undefined, MaterialUIIcons.MusicNote[/* make */0](/* array */[]));
      case 3 : 
          return ReasonReact.element(undefined, undefined, MaterialUIIcons.Textsms[/* make */0](/* array */[]));
      case 4 : 
          return ReasonReact.element(undefined, undefined, MaterialUIIcons.Keyboard[/* make */0](/* array */[]));
      case 5 : 
          return ReasonReact.element(undefined, undefined, MaterialUIIcons.ShowChart[/* make */0](/* array */[]));
      
    }
  } else {
    switch (param.tag | 0) {
      case 0 : 
          return ReasonReact.element(undefined, undefined, MaterialUIIcons.FormatPaint[/* make */0](/* array */[]));
      case 1 : 
      case 2 : 
          return ReasonReact.element(undefined, undefined, MaterialUIIcons.FormatListBulleted[/* make */0](/* array */[]));
      case 3 : 
          return ReasonReact.element(undefined, undefined, MaterialUIIcons.Flip[/* make */0](/* array */[]));
      case 4 : 
          return ReasonReact.element(undefined, undefined, MaterialUIIcons.Image[/* make */0](/* array */[]));
      case 5 : 
          return ReasonReact.element(undefined, undefined, MaterialUIIcons.Movie[/* make */0](/* array */[]));
      case 6 : 
          return ReasonReact.element(undefined, undefined, MaterialUIIcons.Mic[/* make */0](/* array */[]));
      case 7 : 
          return ReasonReact.element(undefined, undefined, MaterialUIIcons.Tonality[/* make */0](/* array */[]));
      case 8 : 
      case 9 : 
          return ReasonReact.element(undefined, undefined, MaterialUIIcons.Voicemail[/* make */0](/* array */[]));
      case 10 : 
          return ReasonReact.element(undefined, undefined, MaterialUIIcons.Filter[/* make */0](/* array */[]));
      case 11 : 
          return ReasonReact.element(undefined, undefined, MaterialUIIcons.Speaker[/* make */0](/* array */[]));
      
    }
  }
}

var defaultLayer_000 = /* content : Fill */Block.__(0, ["black"]);

var defaultLayer = /* record */[
  defaultLayer_000,
  /* enabled */true,
  /* alpha */1.0,
  /* compositeOperation : SourceOver */0,
  /* rotation */0.0,
  /* transformMatrix */Canvas$Gayer.defaultTransform,
  /* filters */"none",
  /* id */undefined
];

function oneCompleteTurnAfterNTicks(n) {
  return Canvas$Gayer.tau / n;
}

function transformMatrix(json) {
  var match = Json_decode.list(Json_decode.$$float, json);
  if (match) {
    var match$1 = match[1];
    if (match$1) {
      var match$2 = match$1[1];
      if (match$2) {
        var match$3 = match$2[1];
        if (match$3) {
          var match$4 = match$3[1];
          if (match$4) {
            var match$5 = match$4[1];
            if (match$5 && !match$5[1]) {
              return /* record */[
                      /* horizontalScaling */match[0],
                      /* horizontalSkewing */match$1[0],
                      /* verticalSkewing */match$2[0],
                      /* verticalScaling */match$3[0],
                      /* horizontalMoving */match$4[0],
                      /* verticalMoving */match$5[0]
                    ];
            } else {
              return Canvas$Gayer.defaultTransform;
            }
          } else {
            return Canvas$Gayer.defaultTransform;
          }
        } else {
          return Canvas$Gayer.defaultTransform;
        }
      } else {
        return Canvas$Gayer.defaultTransform;
      }
    } else {
      return Canvas$Gayer.defaultTransform;
    }
  } else {
    return Canvas$Gayer.defaultTransform;
  }
}

var rotation = Json_decode.$$float;

function rawAudioEncodingByType(type_, json) {
  switch (type_) {
    case "float" : 
        return /* Float */0;
    case "int8" : 
        return Json_decode.map((function (c) {
                      return /* Int8 */[Canvas$Gayer.channel_of_int(c)];
                    }), (function (param) {
                      return Json_decode.field("channel", Json_decode.$$int, param);
                    }), json);
    default:
      return /* Int8 */[/* R */0];
  }
}

function rawAudioEncoding(json) {
  return Json_decode.andThen(rawAudioEncodingByType, (function (param) {
                return Json_decode.field("type", Json_decode.string, param);
              }), json);
}

function rawAudioFormat(json) {
  return /* record */[
          /* x */Json_decode.field("x", Json_decode.$$int, json),
          /* y */Json_decode.field("y", Json_decode.$$int, json),
          /* w */Json_decode.field("w", Json_decode.$$int, json),
          /* h */Json_decode.field("h", Json_decode.$$int, json),
          /* encoding */Json_decode.field("encoding", rawAudioEncoding, json),
          /* sampleRate */Json_decode.field("sampleRate", Json_decode.$$int, json)
        ];
}

function layerByType(type_, json) {
  switch (type_) {
    case "analysis" : 
        var partial_arg = AnalysisOptions$Gayer.DecodeAnalysisOptions[/* analysisOptions */2];
        return Json_decode.map((function (o) {
                      return /* Analysis */Block.__(6, [o]);
                    }), (function (param) {
                      return Json_decode.field("opts", partial_arg, param);
                    }), json);
    case "draw" : 
        var partial_arg$1 = Canvas$Gayer.DrawCommand[/* DecodeDrawCommand */2][/* command */4];
        var partial_arg$2 = function (param) {
          return Json_decode.list(partial_arg$1, param);
        };
        return Json_decode.map((function (xs) {
                      return /* Draw */Block.__(1, [xs]);
                    }), (function (param) {
                      return Json_decode.field("cmds", partial_arg$2, param);
                    }), json);
    case "draw-global" : 
        var partial_arg$3 = Canvas$Gayer.DrawCommand[/* DecodeDrawCommand */2][/* command */4];
        var partial_arg$4 = function (param) {
          return Json_decode.list(partial_arg$3, param);
        };
        return Json_decode.map((function (xs) {
                      return /* DrawGlobal */Block.__(2, [xs]);
                    }), (function (param) {
                      return Json_decode.field("cmds", partial_arg$4, param);
                    }), json);
    case "fill" : 
        return Json_decode.map((function (s) {
                      return /* Fill */Block.__(0, [s]);
                    }), (function (param) {
                      return Json_decode.field("style", Json_decode.string, param);
                    }), json);
    case "hand-drawn" : 
        return /* HandDrawn */0;
    case "histogram" : 
        return /* Histogram */5;
    case "image" : 
        return Json_decode.map((function (s) {
                      return /* Image */Block.__(4, [s]);
                    }), (function (param) {
                      return Json_decode.field("url", Json_decode.string, param);
                    }), json);
    case "keycode-reader" : 
        return /* KeycodeReader */3;
    case "keycode-writer" : 
        return /* KeycodeWriter */4;
    case "midi-keyboard" : 
        return /* MIDIKeyboard */2;
    case "pitchClasses" : 
        return Json_decode.map((function (xs) {
                      return /* PitchClasses */Block.__(7, [Curry._1(Music$Gayer.PitchSet[/* of_list */25], xs)]);
                    }), (function (param) {
                      return Json_decode.field("pc", (function (param) {
                                    return Json_decode.list(Json_decode.$$int, param);
                                  }), param);
                    }), json);
    case "raw-audio-reader" : 
        return Json_decode.map((function (o) {
                      return /* RawAudioReader */Block.__(9, [o]);
                    }), (function (param) {
                      return Json_decode.field("format", rawAudioFormat, param);
                    }), json);
    case "raw-audio-writer" : 
        return Json_decode.map((function (o) {
                      return /* RawAudioWriter */Block.__(8, [o]);
                    }), (function (param) {
                      return Json_decode.field("format", rawAudioFormat, param);
                    }), json);
    case "reader" : 
        var partial_arg$5 = ReaderType$Gayer.DecodeReaderType[/* readerType */1];
        return Json_decode.map((function (t) {
                      return /* Reader */Block.__(11, [t]);
                    }), (function (param) {
                      return Json_decode.field("readerType", partial_arg$5, param);
                    }), json);
    case "regl" : 
        var partial_arg$6 = Regl$Gayer.DecodeReglOptions[/* reglOptions */3];
        return Json_decode.map((function (o) {
                      return /* Regl */Block.__(10, [o]);
                    }), (function (param) {
                      return Json_decode.field("options", partial_arg$6, param);
                    }), json);
    case "slitscan" : 
        var partial_arg$7 = CameraOptions$Gayer.DecodeCameraOptions[/* cameraOptions */1];
        return Json_decode.map((function (s) {
                      return /* Slitscan */Block.__(3, [s]);
                    }), (function (param) {
                      return Json_decode.field("options", partial_arg$7, param);
                    }), json);
    case "video" : 
        return Json_decode.map((function (s) {
                      return /* Video */Block.__(5, [s]);
                    }), (function (param) {
                      return Json_decode.field("url", Json_decode.string, param);
                    }), json);
    case "webcam" : 
        return /* Webcam */1;
    default:
      throw [
            Json_decode.DecodeError,
            "Expected layer content, got " + JSON.stringify(json)
          ];
  }
}

function layerContent(json) {
  return Json_decode.andThen(layerByType, (function (param) {
                return Json_decode.field("type", Json_decode.string, param);
              }), json);
}

function layer(json) {
  return /* record */[
          /* content */Json_decode.field("content", layerContent, json),
          /* enabled */Json_decode.field("enabled", Json_decode.bool, json),
          /* alpha */Json_decode.field("alpha", Json_decode.$$float, json),
          /* compositeOperation */Json_decode.map(Canvas$Gayer.compositeOperation_of_string, (function (param) {
                  return Json_decode.field("compositeOperation", Json_decode.string, param);
                }), json),
          /* rotation */Json_decode.field("rotation", rotation, json),
          /* transformMatrix */Json_decode.field("transformMatrix", transformMatrix, json),
          /* filters */Json_decode.field("filters", Json_decode.string, json),
          /* id */Json_decode.field("id", (function (param) {
                  return Json_decode.optional(Json_decode.string, param);
                }), json)
        ];
}

var DecodeLayer = /* module */[
  /* transformMatrix */transformMatrix,
  /* rotation */rotation,
  /* rawAudioEncodingByType */rawAudioEncodingByType,
  /* rawAudioEncoding */rawAudioEncoding,
  /* rawAudioFormat */rawAudioFormat,
  /* layerByType */layerByType,
  /* layerContent */layerContent,
  /* layer */layer
];

function transformMatrix$1(param) {
  return Json_encode.list((function (prim) {
                return prim;
              }), /* :: */[
              param[/* horizontalScaling */0],
              /* :: */[
                param[/* horizontalSkewing */1],
                /* :: */[
                  param[/* verticalSkewing */2],
                  /* :: */[
                    param[/* verticalScaling */3],
                    /* :: */[
                      param[/* horizontalMoving */4],
                      /* :: */[
                        param[/* verticalMoving */5],
                        /* [] */0
                      ]
                    ]
                  ]
                ]
              ]
            ]);
}

function rawAudioEncoding$1(param) {
  if (param) {
    return Json_encode.object_(/* :: */[
                /* tuple */[
                  "type",
                  "int8"
                ],
                /* :: */[
                  /* tuple */[
                    "channel",
                    Canvas$Gayer.int_of_channel(param[0])
                  ],
                  /* [] */0
                ]
              ]);
  } else {
    return Json_encode.object_(/* :: */[
                /* tuple */[
                  "type",
                  "float"
                ],
                /* [] */0
              ]);
  }
}

function rawAudioFormat$1(r) {
  return Json_encode.object_(/* :: */[
              /* tuple */[
                "x",
                r[/* x */0]
              ],
              /* :: */[
                /* tuple */[
                  "y",
                  r[/* y */1]
                ],
                /* :: */[
                  /* tuple */[
                    "w",
                    r[/* w */2]
                  ],
                  /* :: */[
                    /* tuple */[
                      "h",
                      r[/* h */3]
                    ],
                    /* :: */[
                      /* tuple */[
                        "encoding",
                        rawAudioEncoding$1(r[/* encoding */4])
                      ],
                      /* :: */[
                        /* tuple */[
                          "sampleRate",
                          r[/* sampleRate */5]
                        ],
                        /* [] */0
                      ]
                    ]
                  ]
                ]
              ]
            ]);
}

function layerContent$1(r) {
  if (typeof r === "number") {
    switch (r) {
      case 0 : 
          return Json_encode.object_(/* :: */[
                      /* tuple */[
                        "type",
                        "hand-drawn"
                      ],
                      /* [] */0
                    ]);
      case 1 : 
          return Json_encode.object_(/* :: */[
                      /* tuple */[
                        "type",
                        "webcam"
                      ],
                      /* [] */0
                    ]);
      case 2 : 
          return Json_encode.object_(/* :: */[
                      /* tuple */[
                        "type",
                        "midi-keyboard"
                      ],
                      /* [] */0
                    ]);
      case 3 : 
          return Json_encode.object_(/* :: */[
                      /* tuple */[
                        "type",
                        "keycode-reader"
                      ],
                      /* [] */0
                    ]);
      case 4 : 
          return Json_encode.object_(/* :: */[
                      /* tuple */[
                        "type",
                        "keycode-writer"
                      ],
                      /* [] */0
                    ]);
      case 5 : 
          return Json_encode.object_(/* :: */[
                      /* tuple */[
                        "type",
                        "histogram"
                      ],
                      /* [] */0
                    ]);
      
    }
  } else {
    switch (r.tag | 0) {
      case 0 : 
          return Json_encode.object_(/* :: */[
                      /* tuple */[
                        "type",
                        "fill"
                      ],
                      /* :: */[
                        /* tuple */[
                          "style",
                          r[0]
                        ],
                        /* [] */0
                      ]
                    ]);
      case 1 : 
          return Json_encode.object_(/* :: */[
                      /* tuple */[
                        "type",
                        "draw"
                      ],
                      /* :: */[
                        /* tuple */[
                          "cmds",
                          Json_encode.list(Canvas$Gayer.DrawCommand[/* EncodeDrawCommand */1][/* command */3], r[0])
                        ],
                        /* [] */0
                      ]
                    ]);
      case 2 : 
          return Json_encode.object_(/* :: */[
                      /* tuple */[
                        "type",
                        "draw-global"
                      ],
                      /* :: */[
                        /* tuple */[
                          "cmds",
                          Json_encode.list(Canvas$Gayer.DrawCommand[/* EncodeDrawCommand */1][/* command */3], r[0])
                        ],
                        /* [] */0
                      ]
                    ]);
      case 3 : 
          return Json_encode.object_(/* :: */[
                      /* tuple */[
                        "type",
                        "slitscan"
                      ],
                      /* :: */[
                        /* tuple */[
                          "options",
                          CameraOptions$Gayer.EncodeCameraOptions[/* cameraOptions */1](r[0])
                        ],
                        /* [] */0
                      ]
                    ]);
      case 4 : 
          return Json_encode.object_(/* :: */[
                      /* tuple */[
                        "type",
                        "image"
                      ],
                      /* :: */[
                        /* tuple */[
                          "url",
                          r[0]
                        ],
                        /* [] */0
                      ]
                    ]);
      case 5 : 
          return Json_encode.object_(/* :: */[
                      /* tuple */[
                        "type",
                        "video"
                      ],
                      /* :: */[
                        /* tuple */[
                          "url",
                          r[0]
                        ],
                        /* [] */0
                      ]
                    ]);
      case 6 : 
          return Json_encode.object_(/* :: */[
                      /* tuple */[
                        "type",
                        "analysis"
                      ],
                      /* :: */[
                        /* tuple */[
                          "opts",
                          AnalysisOptions$Gayer.EncodeAnalysisOptions[/* analysisOptions */1](r[0])
                        ],
                        /* [] */0
                      ]
                    ]);
      case 7 : 
          return Json_encode.object_(/* :: */[
                      /* tuple */[
                        "type",
                        "pitchClasses"
                      ],
                      /* :: */[
                        /* tuple */[
                          "pc",
                          Json_encode.list((function (prim) {
                                  return prim;
                                }), Curry._1(Music$Gayer.PitchSet[/* elements */19], r[0]))
                        ],
                        /* [] */0
                      ]
                    ]);
      case 8 : 
          return Json_encode.object_(/* :: */[
                      /* tuple */[
                        "type",
                        "raw-audio-writer"
                      ],
                      /* :: */[
                        /* tuple */[
                          "format",
                          rawAudioFormat$1(r[0])
                        ],
                        /* [] */0
                      ]
                    ]);
      case 9 : 
          return Json_encode.object_(/* :: */[
                      /* tuple */[
                        "type",
                        "raw-audio-reader"
                      ],
                      /* :: */[
                        /* tuple */[
                          "format",
                          rawAudioFormat$1(r[0])
                        ],
                        /* [] */0
                      ]
                    ]);
      case 10 : 
          return Json_encode.object_(/* :: */[
                      /* tuple */[
                        "type",
                        "regl"
                      ],
                      /* :: */[
                        /* tuple */[
                          "options",
                          Regl$Gayer.EncodeReglOptions[/* reglOptions */2](r[0])
                        ],
                        /* [] */0
                      ]
                    ]);
      case 11 : 
          return Json_encode.object_(/* :: */[
                      /* tuple */[
                        "type",
                        "reader"
                      ],
                      /* :: */[
                        /* tuple */[
                          "readerType",
                          ReaderType$Gayer.EncodeReaderType[/* readerType */0](r[0])
                        ],
                        /* [] */0
                      ]
                    ]);
      
    }
  }
}

function rotation$1(prim) {
  return prim;
}

function layer$1(r) {
  return Json_encode.object_(/* :: */[
              /* tuple */[
                "id",
                Json_encode.nullable((function (prim) {
                        return prim;
                      }), r[/* id */7])
              ],
              /* :: */[
                /* tuple */[
                  "content",
                  layerContent$1(r[/* content */0])
                ],
                /* :: */[
                  /* tuple */[
                    "enabled",
                    r[/* enabled */1]
                  ],
                  /* :: */[
                    /* tuple */[
                      "alpha",
                      r[/* alpha */2]
                    ],
                    /* :: */[
                      /* tuple */[
                        "compositeOperation",
                        Canvas$Gayer.string_of_compositeOperation(r[/* compositeOperation */3])
                      ],
                      /* :: */[
                        /* tuple */[
                          "transformMatrix",
                          transformMatrix$1(r[/* transformMatrix */5])
                        ],
                        /* :: */[
                          /* tuple */[
                            "rotation",
                            r[/* rotation */4]
                          ],
                          /* :: */[
                            /* tuple */[
                              "filters",
                              r[/* filters */6]
                            ],
                            /* [] */0
                          ]
                        ]
                      ]
                    ]
                  ]
                ]
              ]
            ]);
}

var EncodeLayer = /* module */[
  /* transformMatrix */transformMatrix$1,
  /* rawAudioEncoding */rawAudioEncoding$1,
  /* rawAudioFormat */rawAudioFormat$1,
  /* layerContent */layerContent$1,
  /* rotation */rotation$1,
  /* layer */layer$1
];

function getLayerKey(layer) {
  return Belt_Option.getWithDefault(layer[/* id */7], JSON.stringify(layerContent$1(layer[/* content */0])));
}

function renderLayerPreview(layer, _, _$1, saveTick, onUnmount, layerRefs) {
  var layerKey = getLayerKey(layer);
  var savePreviewRef = function (aRef) {
    if (aRef == null) {
      return /* () */0;
    } else {
      return Curry._3(saveTick, onUnmount, layerKey + "preview", (function () {
                    var match = Belt_MapString.get(layerRefs[0], layerKey);
                    if (match !== undefined) {
                      var ctx = aRef.getContext("2d");
                      ctx.fillStyle = "black";
                      ctx.fillRect(0, 0, 120, 120);
                      ctx.drawImage(Js_primitive.valFromOption(match), 0, 0, 120, 120);
                      return /* () */0;
                    } else {
                      return /* () */0;
                    }
                  }));
    }
  };
  var match = layer[/* content */0];
  var tmp;
  var exit = 0;
  if (typeof match === "number") {
    exit = 1;
  } else {
    switch (match.tag | 0) {
      case 0 : 
      case 2 : 
      case 7 : 
      case 11 : 
          tmp = null;
          break;
      default:
        exit = 1;
    }
  }
  if (exit === 1) {
    tmp = React.createElement("div", undefined, React.createElement("canvas", {
              ref: savePreviewRef,
              height: "120",
              width: "120"
            }));
  }
  return React.createElement("div", {
              style: {
                display: "flex"
              }
            }, tmp);
}

var component = ReasonReact.reducerComponent("Layer-Gayer");

function make(layer, layerKeys, layerRefs, onSetRef, saveTick, changeLayer, savedImages, width, height, _) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (self) {
              var match = layer[/* content */0];
              var tmp;
              if (typeof match === "number") {
                tmp = ReasonReact.element(undefined, undefined, MaterialUi_Typography.make(undefined, undefined, /* TextSecondary */-507693849, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, /* array */["[no options]"]));
              } else {
                switch (match.tag | 0) {
                  case 0 : 
                      tmp = ReasonReact.element(undefined, undefined, MaterialUi_TextField.make(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, "style", /* Normal */-453122489, undefined, undefined, undefined, (function (evt) {
                                  var value = evt.target.value;
                                  return Curry._2(changeLayer, layer, /* record */[
                                              /* content : Fill */Block.__(0, [value]),
                                              /* enabled */layer[/* enabled */1],
                                              /* alpha */layer[/* alpha */2],
                                              /* compositeOperation */layer[/* compositeOperation */3],
                                              /* rotation */layer[/* rotation */4],
                                              /* transformMatrix */layer[/* transformMatrix */5],
                                              /* filters */layer[/* filters */6],
                                              /* id */layer[/* id */7]
                                            ]);
                                }), undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, /* `String */[
                                -976970511,
                                match[0]
                              ], undefined, /* array */[]));
                      break;
                  case 4 : 
                      tmp = ReasonReact.element(undefined, undefined, ImageSelect$Gayer.make(match[0], savedImages, (function (newUrl) {
                                  return Curry._2(changeLayer, layer, /* record */[
                                              /* content : Image */Block.__(4, [newUrl]),
                                              /* enabled */layer[/* enabled */1],
                                              /* alpha */layer[/* alpha */2],
                                              /* compositeOperation */layer[/* compositeOperation */3],
                                              /* rotation */layer[/* rotation */4],
                                              /* transformMatrix */layer[/* transformMatrix */5],
                                              /* filters */layer[/* filters */6],
                                              /* id */layer[/* id */7]
                                            ]);
                                }), /* array */[]));
                      break;
                  case 7 : 
                      tmp = React.createElement("div", undefined, ReasonReact.element(undefined, undefined, PitchSetSelector$Gayer.make(match[0], (function (newPitches) {
                                      return Curry._2(changeLayer, layer, /* record */[
                                                  /* content : PitchClasses */Block.__(7, [newPitches]),
                                                  /* enabled */layer[/* enabled */1],
                                                  /* alpha */layer[/* alpha */2],
                                                  /* compositeOperation */layer[/* compositeOperation */3],
                                                  /* rotation */layer[/* rotation */4],
                                                  /* transformMatrix */layer[/* transformMatrix */5],
                                                  /* filters */layer[/* filters */6],
                                                  /* id */layer[/* id */7]
                                                ]);
                                    }), /* array */[])));
                      break;
                  case 1 : 
                  case 2 : 
                  case 3 : 
                  case 5 : 
                  case 6 : 
                  case 8 : 
                  case 9 : 
                      tmp = React.createElement("div", undefined);
                      break;
                  case 10 : 
                      var reglOptions = match[0];
                      var tmp$1;
                      if (reglOptions.tag) {
                        var opts = reglOptions[0];
                        tmp$1 = React.createElement("div", undefined, ReasonReact.element(undefined, undefined, LayerSelect$Gayer.make(layerKeys, (function (newKey) {
                                        return Curry._2(changeLayer, layer, /* record */[
                                                    /* content : Regl */Block.__(10, [/* Displacement */Block.__(1, [/* record */[
                                                              /* displacementSourceLayer */newKey,
                                                              /* displacementMap */opts[/* displacementMap */1]
                                                            ]])]),
                                                    /* enabled */layer[/* enabled */1],
                                                    /* alpha */layer[/* alpha */2],
                                                    /* compositeOperation */layer[/* compositeOperation */3],
                                                    /* rotation */layer[/* rotation */4],
                                                    /* transformMatrix */layer[/* transformMatrix */5],
                                                    /* filters */layer[/* filters */6],
                                                    /* id */layer[/* id */7]
                                                  ]);
                                      }), opts[/* displacementSourceLayer */0], /* array */[])), ReasonReact.element(undefined, undefined, LayerSelect$Gayer.make(layerKeys, (function (newKey) {
                                        return Curry._2(changeLayer, layer, /* record */[
                                                    /* content : Regl */Block.__(10, [/* Displacement */Block.__(1, [/* record */[
                                                              /* displacementSourceLayer */opts[/* displacementSourceLayer */0],
                                                              /* displacementMap */newKey
                                                            ]])]),
                                                    /* enabled */layer[/* enabled */1],
                                                    /* alpha */layer[/* alpha */2],
                                                    /* compositeOperation */layer[/* compositeOperation */3],
                                                    /* rotation */layer[/* rotation */4],
                                                    /* transformMatrix */layer[/* transformMatrix */5],
                                                    /* filters */layer[/* filters */6],
                                                    /* id */layer[/* id */7]
                                                  ]);
                                      }), opts[/* displacementMap */1], /* array */[])));
                      } else {
                        var opts$1 = reglOptions[0];
                        tmp$1 = ReasonReact.element(undefined, undefined, LayerSelect$Gayer.make(layerKeys, (function (newKey) {
                                    return Curry._2(changeLayer, layer, /* record */[
                                                /* content : Regl */Block.__(10, [/* Sobel */Block.__(0, [/* record */[/* sourceLayer */newKey]])]),
                                                /* enabled */layer[/* enabled */1],
                                                /* alpha */layer[/* alpha */2],
                                                /* compositeOperation */layer[/* compositeOperation */3],
                                                /* rotation */layer[/* rotation */4],
                                                /* transformMatrix */layer[/* transformMatrix */5],
                                                /* filters */layer[/* filters */6],
                                                /* id */layer[/* id */7]
                                              ]);
                                  }), opts$1[/* sourceLayer */0], /* array */[]));
                      }
                      tmp = React.createElement("div", undefined, tmp$1);
                      break;
                  case 11 : 
                      tmp = React.createElement("div", undefined, ReasonReact.element(undefined, undefined, ReaderType$Gayer.make(match[0], (function (newReaderType) {
                                      return Curry._2(changeLayer, layer, /* record */[
                                                  /* content : Reader */Block.__(11, [newReaderType]),
                                                  /* enabled */layer[/* enabled */1],
                                                  /* alpha */layer[/* alpha */2],
                                                  /* compositeOperation */layer[/* compositeOperation */3],
                                                  /* rotation */layer[/* rotation */4],
                                                  /* transformMatrix */layer[/* transformMatrix */5],
                                                  /* filters */layer[/* filters */6],
                                                  /* id */layer[/* id */7]
                                                ]);
                                    }), /* array */[])));
                      break;
                  
                }
              }
              var match$1 = self[/* state */1][/* expanded */0];
              return ReasonReact.element(undefined, undefined, MaterialUi_Card.make(undefined, undefined, undefined, undefined, undefined, undefined, undefined, /* array */[
                              ReasonReact.element(undefined, undefined, MaterialUi_CardHeader.make(Js_primitive.some(ReasonReact.element(undefined, undefined, MaterialUi_IconButton.make(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, (function () {
                                                      return Curry._2(changeLayer, layer, undefined);
                                                    }), undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, /* array */[ReasonReact.element(undefined, undefined, MaterialUIIcons.Delete[/* make */0](/* array */[]))]))), Js_primitive.some(icon_of_layerContent(layer[/* content */0])), undefined, undefined, undefined, Js_primitive.some(ReasonReact.element(undefined, undefined, MaterialUi_Typography.make(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, /* Subheading */148169314, undefined, {
                                                    marginTop: "-4px"
                                                  }, /* array */[readable_string_type_of_layerContent(layer[/* content */0])]))), undefined, {
                                        paddingTop: "8px",
                                        paddingBottom: "0px"
                                      }, /* array */[])),
                              React.createElement("div", {
                                    style: {
                                      display: "flex",
                                      justifyContent: "flex-start"
                                    }
                                  }, ReasonReact.element(undefined, undefined, MaterialUi_CardMedia.make(undefined, undefined, undefined, "dummy", undefined, undefined, /* array */[renderLayerPreview(layer, changeLayer, Curry._1(onSetRef, layer), saveTick, self[/* onUnmount */4], layerRefs)])), ReasonReact.element(undefined, undefined, MaterialUi_CardContent.make(undefined, undefined, undefined, {
                                            flexGrow: "1"
                                          }, /* array */[tmp])), React.createElement("div", {
                                        style: {
                                          marginRight: "24px",
                                          marginBottom: "24px",
                                          alignItems: "flex-start",
                                          flexDirection: "column"
                                        }
                                      }, ReasonReact.element(undefined, undefined, FloatSlider$Gayer.make(undefined, undefined, "Alpha", layer[/* alpha */2], undefined, (function (value) {
                                                  return Curry._2(changeLayer, layer, /* record */[
                                                              /* content */layer[/* content */0],
                                                              /* enabled */layer[/* enabled */1],
                                                              /* alpha */value,
                                                              /* compositeOperation */layer[/* compositeOperation */3],
                                                              /* rotation */layer[/* rotation */4],
                                                              /* transformMatrix */layer[/* transformMatrix */5],
                                                              /* filters */layer[/* filters */6],
                                                              /* id */layer[/* id */7]
                                                            ]);
                                                }), /* array */[])), ReasonReact.element(undefined, undefined, MaterialUi_FormGroup.make(undefined, true, undefined, undefined, /* array */[ReasonReact.element(undefined, undefined, CompositeOperationSelect$Gayer.make(layer[/* compositeOperation */3], (function (newOperation) {
                                                            return Curry._2(changeLayer, layer, /* record */[
                                                                        /* content */layer[/* content */0],
                                                                        /* enabled */layer[/* enabled */1],
                                                                        /* alpha */layer[/* alpha */2],
                                                                        /* compositeOperation */newOperation,
                                                                        /* rotation */layer[/* rotation */4],
                                                                        /* transformMatrix */layer[/* transformMatrix */5],
                                                                        /* filters */layer[/* filters */6],
                                                                        /* id */layer[/* id */7]
                                                                      ]);
                                                          }), /* array */[]))])), ReasonReact.element(undefined, undefined, MaterialUi_FormGroup.make(undefined, true, undefined, undefined, /* array */[
                                                React.createElement("div", {
                                                      style: {
                                                        flexGrow: "1"
                                                      }
                                                    }),
                                                ReasonReact.element(undefined, undefined, MaterialUi_IconButton.make(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, Curry._1(self[/* handle */0], (function (_, param) {
                                                                return Curry._1(param[/* send */3], /* ToggleExpanded */0);
                                                              })), undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, {
                                                          marginRight: "-16px"
                                                        }, /* array */[match$1 ? React.createElement("span", {
                                                                  style: {
                                                                    transform: "rotate(180deg)"
                                                                  }
                                                                }, ReasonReact.element(undefined, undefined, MaterialUIIcons.ExpandMore[/* make */0](/* array */[]))) : ReasonReact.element(undefined, undefined, MaterialUIIcons.ExpandMore[/* make */0](/* array */[]))]))
                                              ])))),
                              ReasonReact.element(undefined, undefined, MaterialUi_Collapse.make(undefined, undefined, undefined, self[/* state */1][/* expanded */0], undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, /* array */[ReasonReact.element(undefined, undefined, MaterialUi_CardContent.make(undefined, undefined, undefined, {
                                                  display: "flex",
                                                  flexDirection: "row",
                                                  justifyContent: "space-between"
                                                }, /* array */[
                                                  ReasonReact.element(undefined, undefined, MaterialUi_FormControl.make(undefined, /* `String */[
                                                            -976970511,
                                                            "fieldset"
                                                          ], undefined, undefined, undefined, undefined, undefined, undefined, undefined, /* array */[
                                                            ReasonReact.element(undefined, undefined, MaterialUi_FormGroup.make(undefined, undefined, undefined, undefined, /* array */[ReasonReact.element(undefined, undefined, MaterialUi_FormControlLabel.make(undefined, undefined, Js_primitive.some(ReasonReact.element(undefined, undefined, MaterialUi_Switch.make(/* `Bool */[
                                                                                            737456202,
                                                                                            layer[/* enabled */1]
                                                                                          ], undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, (function (_, value) {
                                                                                              return Curry._2(changeLayer, layer, /* record */[
                                                                                                          /* content */layer[/* content */0],
                                                                                                          /* enabled */value,
                                                                                                          /* alpha */layer[/* alpha */2],
                                                                                                          /* compositeOperation */layer[/* compositeOperation */3],
                                                                                                          /* rotation */layer[/* rotation */4],
                                                                                                          /* transformMatrix */layer[/* transformMatrix */5],
                                                                                                          /* filters */layer[/* filters */6],
                                                                                                          /* id */layer[/* id */7]
                                                                                                        ]);
                                                                                            }), undefined, "enabled", undefined, undefined, /* array */[]))), undefined, undefined, "Active (include in render)", undefined, undefined, undefined, undefined, undefined, /* array */[]))])),
                                                            ReasonReact.element(undefined, undefined, MaterialUi_FormGroup.make(undefined, undefined, undefined, undefined, /* array */[
                                                                      ReasonReact.element(undefined, undefined, FloatSlider$Gayer.make(-width, width, "x", layer[/* transformMatrix */5][/* horizontalMoving */4], undefined, (function (newX) {
                                                                                  var init = layer[/* transformMatrix */5];
                                                                                  return Curry._2(changeLayer, layer, /* record */[
                                                                                              /* content */layer[/* content */0],
                                                                                              /* enabled */layer[/* enabled */1],
                                                                                              /* alpha */layer[/* alpha */2],
                                                                                              /* compositeOperation */layer[/* compositeOperation */3],
                                                                                              /* rotation */layer[/* rotation */4],
                                                                                              /* transformMatrix : record */[
                                                                                                /* horizontalScaling */init[/* horizontalScaling */0],
                                                                                                /* horizontalSkewing */init[/* horizontalSkewing */1],
                                                                                                /* verticalSkewing */init[/* verticalSkewing */2],
                                                                                                /* verticalScaling */init[/* verticalScaling */3],
                                                                                                /* horizontalMoving */newX,
                                                                                                /* verticalMoving */init[/* verticalMoving */5]
                                                                                              ],
                                                                                              /* filters */layer[/* filters */6],
                                                                                              /* id */layer[/* id */7]
                                                                                            ]);
                                                                                }), /* array */[])),
                                                                      ReasonReact.element(undefined, undefined, FloatSlider$Gayer.make(-5.0, 5.0, "scaleX", layer[/* transformMatrix */5][/* horizontalScaling */0], undefined, (function (newScaleX) {
                                                                                  var init = layer[/* transformMatrix */5];
                                                                                  return Curry._2(changeLayer, layer, /* record */[
                                                                                              /* content */layer[/* content */0],
                                                                                              /* enabled */layer[/* enabled */1],
                                                                                              /* alpha */layer[/* alpha */2],
                                                                                              /* compositeOperation */layer[/* compositeOperation */3],
                                                                                              /* rotation */layer[/* rotation */4],
                                                                                              /* transformMatrix : record */[
                                                                                                /* horizontalScaling */newScaleX,
                                                                                                /* horizontalSkewing */init[/* horizontalSkewing */1],
                                                                                                /* verticalSkewing */init[/* verticalSkewing */2],
                                                                                                /* verticalScaling */init[/* verticalScaling */3],
                                                                                                /* horizontalMoving */init[/* horizontalMoving */4],
                                                                                                /* verticalMoving */init[/* verticalMoving */5]
                                                                                              ],
                                                                                              /* filters */layer[/* filters */6],
                                                                                              /* id */layer[/* id */7]
                                                                                            ]);
                                                                                }), /* array */[]))
                                                                    ])),
                                                            ReasonReact.element(undefined, undefined, MaterialUi_FormGroup.make(undefined, undefined, undefined, undefined, /* array */[
                                                                      ReasonReact.element(undefined, undefined, FloatSlider$Gayer.make(-height, height, "y", layer[/* transformMatrix */5][/* verticalMoving */5], undefined, (function (newY) {
                                                                                  var init = layer[/* transformMatrix */5];
                                                                                  return Curry._2(changeLayer, layer, /* record */[
                                                                                              /* content */layer[/* content */0],
                                                                                              /* enabled */layer[/* enabled */1],
                                                                                              /* alpha */layer[/* alpha */2],
                                                                                              /* compositeOperation */layer[/* compositeOperation */3],
                                                                                              /* rotation */layer[/* rotation */4],
                                                                                              /* transformMatrix : record */[
                                                                                                /* horizontalScaling */init[/* horizontalScaling */0],
                                                                                                /* horizontalSkewing */init[/* horizontalSkewing */1],
                                                                                                /* verticalSkewing */init[/* verticalSkewing */2],
                                                                                                /* verticalScaling */init[/* verticalScaling */3],
                                                                                                /* horizontalMoving */init[/* horizontalMoving */4],
                                                                                                /* verticalMoving */-newY
                                                                                              ],
                                                                                              /* filters */layer[/* filters */6],
                                                                                              /* id */layer[/* id */7]
                                                                                            ]);
                                                                                }), /* array */[])),
                                                                      ReasonReact.element(undefined, undefined, FloatSlider$Gayer.make(-5.0, 5.0, "scaleY", layer[/* transformMatrix */5][/* verticalScaling */3], undefined, (function (newScaleY) {
                                                                                  var init = layer[/* transformMatrix */5];
                                                                                  return Curry._2(changeLayer, layer, /* record */[
                                                                                              /* content */layer[/* content */0],
                                                                                              /* enabled */layer[/* enabled */1],
                                                                                              /* alpha */layer[/* alpha */2],
                                                                                              /* compositeOperation */layer[/* compositeOperation */3],
                                                                                              /* rotation */layer[/* rotation */4],
                                                                                              /* transformMatrix : record */[
                                                                                                /* horizontalScaling */init[/* horizontalScaling */0],
                                                                                                /* horizontalSkewing */init[/* horizontalSkewing */1],
                                                                                                /* verticalSkewing */init[/* verticalSkewing */2],
                                                                                                /* verticalScaling */newScaleY,
                                                                                                /* horizontalMoving */init[/* horizontalMoving */4],
                                                                                                /* verticalMoving */init[/* verticalMoving */5]
                                                                                              ],
                                                                                              /* filters */layer[/* filters */6],
                                                                                              /* id */layer[/* id */7]
                                                                                            ]);
                                                                                }), /* array */[]))
                                                                    ])),
                                                            ReasonReact.element(undefined, undefined, MaterialUi_FormGroup.make(undefined, undefined, undefined, undefined, /* array */[
                                                                      ReasonReact.element(undefined, undefined, FloatSlider$Gayer.make(-5.0, 5.0, "skewX", layer[/* transformMatrix */5][/* horizontalSkewing */1], undefined, (function (newSkewX) {
                                                                                  var init = layer[/* transformMatrix */5];
                                                                                  return Curry._2(changeLayer, layer, /* record */[
                                                                                              /* content */layer[/* content */0],
                                                                                              /* enabled */layer[/* enabled */1],
                                                                                              /* alpha */layer[/* alpha */2],
                                                                                              /* compositeOperation */layer[/* compositeOperation */3],
                                                                                              /* rotation */layer[/* rotation */4],
                                                                                              /* transformMatrix : record */[
                                                                                                /* horizontalScaling */init[/* horizontalScaling */0],
                                                                                                /* horizontalSkewing */newSkewX,
                                                                                                /* verticalSkewing */init[/* verticalSkewing */2],
                                                                                                /* verticalScaling */init[/* verticalScaling */3],
                                                                                                /* horizontalMoving */init[/* horizontalMoving */4],
                                                                                                /* verticalMoving */init[/* verticalMoving */5]
                                                                                              ],
                                                                                              /* filters */layer[/* filters */6],
                                                                                              /* id */layer[/* id */7]
                                                                                            ]);
                                                                                }), /* array */[])),
                                                                      ReasonReact.element(undefined, undefined, FloatSlider$Gayer.make(-5.0, 5.0, "skewY", layer[/* transformMatrix */5][/* verticalSkewing */2], undefined, (function (newSkewY) {
                                                                                  var init = layer[/* transformMatrix */5];
                                                                                  return Curry._2(changeLayer, layer, /* record */[
                                                                                              /* content */layer[/* content */0],
                                                                                              /* enabled */layer[/* enabled */1],
                                                                                              /* alpha */layer[/* alpha */2],
                                                                                              /* compositeOperation */layer[/* compositeOperation */3],
                                                                                              /* rotation */layer[/* rotation */4],
                                                                                              /* transformMatrix : record */[
                                                                                                /* horizontalScaling */init[/* horizontalScaling */0],
                                                                                                /* horizontalSkewing */init[/* horizontalSkewing */1],
                                                                                                /* verticalSkewing */newSkewY,
                                                                                                /* verticalScaling */init[/* verticalScaling */3],
                                                                                                /* horizontalMoving */init[/* horizontalMoving */4],
                                                                                                /* verticalMoving */init[/* verticalMoving */5]
                                                                                              ],
                                                                                              /* filters */layer[/* filters */6],
                                                                                              /* id */layer[/* id */7]
                                                                                            ]);
                                                                                }), /* array */[]))
                                                                    ])),
                                                            ReasonReact.element(undefined, undefined, NumericTextField$Gayer.make(/* `Float */[
                                                                      365180284,
                                                                      Canvas$Gayer.radiansToDegrees(layer[/* rotation */4])
                                                                    ], "Rotation (degrees)", (function (value) {
                                                                        return Curry._2(changeLayer, layer, /* record */[
                                                                                    /* content */layer[/* content */0],
                                                                                    /* enabled */layer[/* enabled */1],
                                                                                    /* alpha */layer[/* alpha */2],
                                                                                    /* compositeOperation */layer[/* compositeOperation */3],
                                                                                    /* rotation */Canvas$Gayer.degreesToRadians(value),
                                                                                    /* transformMatrix */layer[/* transformMatrix */5],
                                                                                    /* filters */layer[/* filters */6],
                                                                                    /* id */layer[/* id */7]
                                                                                  ]);
                                                                      }), /* array */[]))
                                                          ])),
                                                  ReasonReact.element(undefined, undefined, MaterialUi_FormControl.make(undefined, /* `String */[
                                                            -976970511,
                                                            "fieldset"
                                                          ], undefined, undefined, undefined, undefined, undefined, undefined, {
                                                            display: "flex",
                                                            justifyContent: "flex-start"
                                                          }, /* array */[ReasonReact.element(undefined, undefined, MaterialUi_TextField.make(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, "filters", /* Normal */-453122489, undefined, undefined, undefined, (function (evt) {
                                                                        var value = evt.target.value;
                                                                        return Curry._2(changeLayer, layer, /* record */[
                                                                                    /* content */layer[/* content */0],
                                                                                    /* enabled */layer[/* enabled */1],
                                                                                    /* alpha */layer[/* alpha */2],
                                                                                    /* compositeOperation */layer[/* compositeOperation */3],
                                                                                    /* rotation */layer[/* rotation */4],
                                                                                    /* transformMatrix */layer[/* transformMatrix */5],
                                                                                    /* filters */value,
                                                                                    /* id */layer[/* id */7]
                                                                                  ]);
                                                                      }), undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, /* `String */[
                                                                      -976970511,
                                                                      layer[/* filters */6]
                                                                    ], undefined, /* array */[]))]))
                                                ]))]))
                            ]));
            }),
          /* initialState */(function () {
              return /* record */[/* expanded */false];
            }),
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */(function (_, state) {
              return /* Update */Block.__(0, [/* record */[/* expanded */!state[/* expanded */0]]]);
            }),
          /* subscriptions */component[/* subscriptions */13],
          /* jsElementWrapped */component[/* jsElementWrapped */14]
        ];
}

export {
  readable_string_type_of_layerContent ,
  string_type_of_layerContent ,
  icon_of_layerContent ,
  defaultLayer ,
  oneCompleteTurnAfterNTicks ,
  DecodeLayer ,
  EncodeLayer ,
  getLayerKey ,
  renderLayerPreview ,
  component ,
  make ,
  
}
/* component Not a pure module */
