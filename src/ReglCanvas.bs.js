// Generated by BUCKLESCRIPT VERSION 4.0.3, PLEASE EDIT WITH CARE

import * as Regl from "regl";
import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as Regl$Gayer from "./Regl.bs.js";
import * as ReasonReact from "reason-react/src/ReasonReact.js";
import * as Js_primitive from "bs-platform/lib/es6/js_primitive.js";
import * as Belt_MapString from "bs-platform/lib/es6/belt_MapString.js";

var component = ReasonReact.reducerComponent("ReglCanvas-Gayer");

function make(layerRefs, setRef, saveTick, layerKey, width, height, _) {
  var handleSetRef = function (aRef, param) {
    var state = param[/* state */1];
    Curry._1(setRef, aRef);
    var maybeRef = (aRef == null) ? undefined : Js_primitive.some(aRef);
    state[/* canvasRef */0][0] = maybeRef;
    var match = state[/* reglRef */1][0];
    if ((aRef == null) || match !== undefined) {
      return /* () */0;
    } else {
      var theRegl = Regl(aRef);
      state[/* reglRef */1][0] = Js_primitive.some(theRegl);
      var match$1 = Belt_MapString.get(layerRefs[0], "root");
      if (match$1 !== undefined) {
        var rootTexture = theRegl.texture(Js_primitive.valFromOption(match$1));
        console.log(rootTexture);
        state[/* rootTextureRef */2][0] = Js_primitive.some(rootTexture);
      }
      var drawCommand = Regl$Gayer.makeDrawCommand(theRegl, Regl$Gayer.sobelSpec);
      state[/* drawCommandRef */3][0] = Js_primitive.some(drawCommand);
      return /* () */0;
    }
  };
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */(function (self) {
              return Curry._2(saveTick, layerKey, (function () {
                            var match = self[/* state */1][/* reglRef */1][0];
                            if (match !== undefined) {
                              Js_primitive.valFromOption(match).clear({
                                    color: /* array */[
                                      0.0,
                                      0.0,
                                      0.0,
                                      1.0
                                    ],
                                    depth: 1.0
                                  });
                              var match$1 = self[/* state */1][/* drawCommandRef */3][0];
                              if (match$1 !== undefined) {
                                Js_primitive.valFromOption(match$1).draw({ });
                                return /* () */0;
                              } else {
                                return /* () */0;
                              }
                            } else {
                              return /* () */0;
                            }
                          }));
            }),
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (self) {
              return React.createElement("canvas", {
                          ref: Curry._1(self[/* handle */0], handleSetRef),
                          height: height.toString(),
                          width: width.toString()
                        });
            }),
          /* initialState */(function () {
              return /* record */[
                      /* canvasRef : record */[/* contents */undefined],
                      /* reglRef : record */[/* contents */undefined],
                      /* rootTextureRef : record */[/* contents */undefined],
                      /* drawCommandRef : record */[/* contents */undefined]
                    ];
            }),
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */(function (_, _$1) {
              return /* NoUpdate */0;
            }),
          /* subscriptions */component[/* subscriptions */13],
          /* jsElementWrapped */component[/* jsElementWrapped */14]
        ];
}

export {
  component ,
  make ,
  
}
/* component Not a pure module */
