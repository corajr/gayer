// Generated by BUCKLESCRIPT VERSION 4.0.3, PLEASE EDIT WITH CARE

import * as $$Array from "bs-platform/lib/es6/array.js";
import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as Webmidi from "webmidi";
import * as Caml_array from "bs-platform/lib/es6/caml_array.js";
import * as ReasonReact from "reason-react/src/ReasonReact.js";
import * as Js_primitive from "bs-platform/lib/es6/js_primitive.js";
import * as WebMIDI$Gayer from "./WebMIDI.bs.js";

function defaultState() {
  return /* record */[/* controlInput : record */[/* contents */undefined]];
}

var component = ReasonReact.reducerComponent("MIDICanvas");

function make(onChange, _) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */(function (self) {
              Webmidi.enable((function () {
                      console.log("MIDI Inputs: ");
                      $$Array.iter((function (prim) {
                              console.log(prim);
                              return /* () */0;
                            }), Webmidi.inputs);
                      console.log("MIDI Outputs: ");
                      $$Array.iter((function (prim) {
                              console.log(prim);
                              return /* () */0;
                            }), Webmidi.outputs);
                      var input = Caml_array.caml_array_get(Webmidi.inputs, 1);
                      self[/* state */1][/* controlInput */0][0] = Js_primitive.some(input);
                      WebMIDI$Gayer.addListener(input, /* ControlChange */3, /* All */0, (function (param) {
                              switch (param.tag | 0) {
                                case 0 : 
                                case 1 : 
                                    return /* () */0;
                                case 2 : 
                                    return Curry._1(onChange, param[0]);
                                
                              }
                            }));
                      return Curry._1(self[/* onUnmount */4], (function () {
                                    return WebMIDI$Gayer.removeListener(input, /* ControlChange */3);
                                  }));
                    }));
              return /* () */0;
            }),
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function () {
              return React.createElement("div", undefined);
            }),
          /* initialState */defaultState,
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */(function (_, _$1) {
              return /* NoUpdate */0;
            }),
          /* subscriptions */component[/* subscriptions */13],
          /* jsElementWrapped */component[/* jsElementWrapped */14]
        ];
}

export {
  defaultState ,
  component ,
  make ,
  
}
/* component Not a pure module */
