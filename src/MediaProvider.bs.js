// Generated by BUCKLESCRIPT VERSION 4.0.3, PLEASE EDIT WITH CARE

import * as List from "bs-platform/lib/es6/list.js";
import * as $$Array from "bs-platform/lib/es6/array.js";
import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as Layer$Gayer from "./Layer.bs.js";
import * as ReasonReact from "reason-react/src/ReasonReact.js";
import * as MIDICanvas$Gayer from "./MIDICanvas.bs.js";
import * as AnalysisCanvas$Gayer from "./AnalysisCanvas.bs.js";

function renderLayerContent(key, getAudio, setRef, setTick, millisPerTick, _, height, layerContent) {
  var tmp;
  if (typeof layerContent === "number") {
    tmp = ReasonReact.element(undefined, undefined, MIDICanvas$Gayer.make(setRef, /* array */[]));
  } else {
    switch (layerContent.tag | 0) {
      case 2 : 
          tmp = React.createElement("video", {
                ref: setRef,
                autoPlay: true,
                height: "120",
                muted: true,
                width: "120"
              });
          break;
      case 3 : 
          tmp = React.createElement("img", {
                ref: setRef,
                height: "120",
                src: layerContent[0],
                width: "120"
              });
          break;
      case 4 : 
          tmp = React.createElement("video", {
                ref: setRef,
                autoPlay: true,
                height: "120",
                loop: true,
                muted: true,
                src: layerContent[0],
                width: "120"
              });
          break;
      case 5 : 
          var match = Curry._1(getAudio, layerContent[0]);
          tmp = ReasonReact.element(undefined, undefined, AnalysisCanvas$Gayer.make(height, match[0], match[1], millisPerTick, setRef, setTick, /* array */[]));
          break;
      default:
        tmp = null;
    }
  }
  return React.createElement("div", {
              key: key
            }, tmp);
}

var component = ReasonReact.statelessComponent("MediaProvider");

function make(layers, rootWidth, rootHeight, onSetRef, getAudio, saveTick, millisPerAudioTick, _) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function () {
              return React.createElement("div", {
                          style: {
                            position: "absolute",
                            visibility: "hidden"
                          }
                        }, $$Array.of_list(List.map((function (layer) {
                                    return renderLayerContent(JSON.stringify(Layer$Gayer.EncodeLayer[/* layerContent */1](layer[/* content */0])), getAudio, Curry._1(onSetRef, layer), saveTick, millisPerAudioTick, rootWidth, rootHeight, layer[/* content */0]);
                                  }), layers)));
            }),
          /* initialState */component[/* initialState */10],
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */component[/* reducer */12],
          /* subscriptions */component[/* subscriptions */13],
          /* jsElementWrapped */component[/* jsElementWrapped */14]
        ];
}

export {
  renderLayerContent ,
  component ,
  make ,
  
}
/* component Not a pure module */
