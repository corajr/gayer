// Generated by BUCKLESCRIPT VERSION 4.0.3, PLEASE EDIT WITH CARE

import * as List from "bs-platform/lib/es6/list.js";
import * as $$Array from "bs-platform/lib/es6/array.js";
import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as Layer$Gayer from "./Layer.bs.js";
import * as ReasonReact from "reason-react/src/ReasonReact.js";
import * as AudioGraph$Gayer from "./AudioGraph.bs.js";
import * as LayerContent$Gayer from "./LayerContent.bs.js";

var component = ReasonReact.statelessComponent("MediaProvider");

function make(layers, rootWidth, rootHeight, onSetRef, getAudio, audioGraph, audioCtx, saveTick, millisPerAudioTick, _) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function () {
              return React.createElement("div", {
                          style: {
                            position: "absolute",
                            visibility: "hidden"
                          }
                        }, $$Array.of_list(List.map((function (layer) {
                                    var key = JSON.stringify(Layer$Gayer.EncodeLayer[/* layerContent */1](layer[/* content */0]));
                                    var match = layer[/* content */0];
                                    if (typeof match !== "number") {
                                      if (match.tag === 5) {
                                        var match$1 = Curry._1(getAudio, match[0]);
                                        var maybeInput = match$1[1];
                                        if (maybeInput !== undefined) {
                                          audioGraph[0] = AudioGraph$Gayer.updateConnections(AudioGraph$Gayer.addNode(/* tuple */[
                                                    key + "input",
                                                    maybeInput
                                                  ], audioGraph[0]));
                                        }
                                        
                                      }
                                      
                                    }
                                    return ReasonReact.element(undefined, undefined, LayerContent$Gayer.make(key, audioCtx, audioGraph, Curry._1(onSetRef, layer), saveTick, millisPerAudioTick, rootWidth, rootHeight, layer[/* content */0], /* array */[]));
                                  }), layers)));
            }),
          /* initialState */component[/* initialState */10],
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */component[/* reducer */12],
          /* subscriptions */component[/* subscriptions */13],
          /* jsElementWrapped */component[/* jsElementWrapped */14]
        ];
}

export {
  component ,
  make ,
  
}
/* component Not a pure module */
