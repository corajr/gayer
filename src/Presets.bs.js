// Generated by BUCKLESCRIPT VERSION 4.0.3, PLEASE EDIT WITH CARE

import * as Block from "bs-platform/lib/es6/block.js";
import * as Audio$Gayer from "./Audio.bs.js";
import * as Music$Gayer from "./Music.bs.js";
import * as Canvas$Gayer from "./Canvas.bs.js";

var baseLayer_000 = /* content : Fill */Block.__(0, ["black"]);

var baseLayer = /* record */[
  baseLayer_000,
  /* alpha */1.0,
  /* compositeOperation : SourceOver */0,
  /* transformMatrix */Canvas$Gayer.defaultTransform
];

var analyzer_000 = /* content : Analysis */Block.__(3, [/* Mic */1]);

var analyzer = /* record */[
  analyzer_000,
  /* alpha */1.0,
  /* compositeOperation : SourceOver */0,
  /* transformMatrix */Canvas$Gayer.defaultTransform
];

var webcam_000 = /* content : Webcam */Block.__(1, [/* record */[/* slitscan */undefined]]);

var webcam = /* record */[
  webcam_000,
  /* alpha */1.0,
  /* compositeOperation : SourceOver */0,
  /* transformMatrix */Canvas$Gayer.defaultTransform
];

var slitscan_000 = /* content : Webcam */Block.__(1, [/* record */[/* slitscan *//* record */[/* x */320]]]);

var slitscan = /* record */[
  slitscan_000,
  /* alpha */1.0,
  /* compositeOperation : SourceOver */0,
  /* transformMatrix */Canvas$Gayer.defaultTransform
];

var reader_000 = /* content : Reader */Block.__(5, [/* R */0]);

var reader = /* record */[
  reader_000,
  /* alpha */0.0,
  /* compositeOperation : SourceOver */0,
  /* transformMatrix */Canvas$Gayer.defaultTransform
];

function pitchFilter(pc) {
  return /* record */[
          /* content : PitchClasses */Block.__(4, [pc]),
          /* alpha */1.0,
          /* compositeOperation : DestinationOut */6,
          /* transformMatrix */Canvas$Gayer.defaultTransform
        ];
}

function fill($staropt$star, fillStyle) {
  var alpha = $staropt$star !== undefined ? $staropt$star : 1.0;
  return /* record */[
          /* content : Fill */Block.__(0, [fillStyle]),
          /* alpha */alpha,
          /* compositeOperation : SourceOver */0,
          /* transformMatrix */Canvas$Gayer.defaultTransform
        ];
}

function img(url) {
  return /* record */[
          /* content : Image */Block.__(2, [url]),
          /* alpha */1.0,
          /* compositeOperation : SourceOver */0,
          /* transformMatrix */Canvas$Gayer.defaultTransform
        ];
}

var hubble = img("media/hubble_ultra_deep_field.jpg");

var spacy_001 = /* :: */[
  pitchFilter(Music$Gayer.cMajor),
  /* :: */[
    reader,
    /* [] */0
  ]
];

var spacy = /* :: */[
  hubble,
  spacy_001
];

var init = img("media/harmony.png");

var harmony_000 = fill(0.1, "black");

var harmony_001 = /* :: */[
  /* record */[
    /* content */init[/* content */0],
    /* alpha */init[/* alpha */1],
    /* compositeOperation */init[/* compositeOperation */2],
    /* transformMatrix : record */[
      /* horizontalScaling */Canvas$Gayer.defaultTransform[/* horizontalScaling */0],
      /* horizontalSkewing */Canvas$Gayer.defaultTransform[/* horizontalSkewing */1],
      /* verticalSkewing */Canvas$Gayer.defaultTransform[/* verticalSkewing */2],
      /* verticalScaling */Canvas$Gayer.defaultTransform[/* verticalScaling */3],
      /* horizontalMoving */Canvas$Gayer.defaultTransform[/* horizontalMoving */4],
      /* verticalMoving */48.0
    ]
  ],
  /* :: */[
    /* record */[
      /* content : Analysis */Block.__(3, [/* Mic */1]),
      /* alpha */0.1,
      /* compositeOperation : Overlay */13,
      /* transformMatrix */Canvas$Gayer.defaultTransform
    ],
    /* :: */[
      /* record */[
        /* content : Webcam */Block.__(1, [/* record */[/* slitscan *//* record */[/* x */320]]]),
        /* alpha */0.1,
        /* compositeOperation : Overlay */13,
        /* transformMatrix */Canvas$Gayer.defaultTransform
      ],
      /* :: */[
        pitchFilter(Music$Gayer.cMajor),
        /* :: */[
          reader,
          /* [] */0
        ]
      ]
    ]
  ]
];

var harmony = /* :: */[
  harmony_000,
  harmony_001
];

var allLayerTypes_001 = /* :: */[
  analyzer,
  /* :: */[
    webcam,
    /* :: */[
      slitscan,
      /* :: */[
        fill(0.0125, "white"),
        /* :: */[
          pitchFilter(Music$Gayer.cMajor),
          /* :: */[
            reader,
            /* [] */0
          ]
        ]
      ]
    ]
  ]
];

var allLayerTypes = /* :: */[
  hubble,
  allLayerTypes_001
];

var defaultParams = /* record */[
  /* readPosDelta */1,
  /* writePosDelta */1,
  /* writePosOffset */0,
  /* audioInputSetting : PinkNoise */0,
  /* inputGain */1.0,
  /* outputGain */0.1,
  /* q */Audio$Gayer.defaultQ,
  /* transpose */0,
  /* shouldClear */true,
  /* layers */spacy
];

var harmonyParams = /* record */[
  /* readPosDelta */1,
  /* writePosDelta */1,
  /* writePosOffset */0,
  /* audioInputSetting : PinkNoise */0,
  /* inputGain */1.0,
  /* outputGain */0.1,
  /* q */Audio$Gayer.defaultQ,
  /* transpose */0,
  /* shouldClear */false,
  /* layers */harmony
];

var harmonyIntensified_009 = /* layers : :: */[
  img("media/harmony_intensified.png"),
  /* :: */[
    reader,
    /* [] */0
  ]
];

var harmonyIntensified = /* record */[
  /* readPosDelta */1,
  /* writePosDelta */1,
  /* writePosOffset */0,
  /* audioInputSetting : PinkNoise */0,
  /* inputGain */1.0,
  /* outputGain */0.1,
  /* q */Audio$Gayer.defaultQ,
  /* transpose */0,
  /* shouldClear */false,
  harmonyIntensified_009
];

var feedback_009 = /* layers : :: */[
  webcam,
  /* :: */[
    /* record */[
      /* content : Analysis */Block.__(3, [/* Mic */1]),
      /* alpha */0.5,
      /* compositeOperation : SourceOver */0,
      /* transformMatrix */Canvas$Gayer.defaultTransform
    ],
    /* :: */[
      pitchFilter(Music$Gayer.cMajor),
      /* :: */[
        reader,
        /* [] */0
      ]
    ]
  ]
];

var feedback = /* record */[
  /* readPosDelta */1,
  /* writePosDelta */1,
  /* writePosOffset */0,
  /* audioInputSetting : Mic */1,
  /* inputGain */1.0,
  /* outputGain */0.1,
  /* q */Audio$Gayer.defaultQ,
  /* transpose */0,
  /* shouldClear */true,
  feedback_009
];

var slitscanParams_009 = /* layers : :: */[
  slitscan,
  /* :: */[
    /* record */[
      /* content : Analysis */Block.__(3, [/* Mic */1]),
      /* alpha */0.25,
      /* compositeOperation : SourceOver */0,
      /* transformMatrix */Canvas$Gayer.defaultTransform
    ],
    /* :: */[
      pitchFilter(Music$Gayer.cMajor),
      /* :: */[
        reader,
        /* [] */0
      ]
    ]
  ]
];

var slitscanParams = /* record */[
  /* readPosDelta */1,
  /* writePosDelta */1,
  /* writePosOffset */0,
  /* audioInputSetting : PinkNoise */0,
  /* inputGain */1.0,
  /* outputGain */0.1,
  /* q */Audio$Gayer.defaultQ,
  /* transpose */0,
  /* shouldClear */false,
  slitscanParams_009
];

var debussyFile_000 = /* content : Analysis */Block.__(3, [/* AudioFile */["media/sade/is_it_a_crime.mp3"]]);

var debussyFile = /* record */[
  debussyFile_000,
  /* alpha */1.0,
  /* compositeOperation : SourceOver */0,
  /* transformMatrix */Canvas$Gayer.defaultTransform
];

var debussy_009 = /* layers : :: */[
  debussyFile,
  /* :: */[
    reader,
    /* [] */0
  ]
];

var debussy = /* record */[
  /* readPosDelta */1,
  /* writePosDelta */1,
  /* writePosOffset */0,
  /* audioInputSetting : PinkNoise */0,
  /* inputGain */1.0,
  /* outputGain */0.1,
  /* q */Audio$Gayer.defaultQ,
  /* transpose */0,
  /* shouldClear */false,
  debussy_009
];

var presets_000 = /* tuple */[
  "Harmony",
  harmonyParams
];

var presets_001 = /* :: */[
  /* tuple */[
    "Slitscan",
    slitscanParams
  ],
  /* :: */[
    /* tuple */[
      "Debussy",
      debussy
    ],
    /* :: */[
      /* tuple */[
        "Feedback (may be loud!)",
        feedback
      ],
      /* :: */[
        /* tuple */[
          "Overstuffed",
          /* record */[
            /* readPosDelta */1,
            /* writePosDelta */1,
            /* writePosOffset */0,
            /* audioInputSetting : PinkNoise */0,
            /* inputGain */1.0,
            /* outputGain */0.1,
            /* q */Audio$Gayer.defaultQ,
            /* transpose */0,
            /* shouldClear */true,
            /* layers */allLayerTypes
          ]
        ],
        /* :: */[
          /* tuple */[
            "Spacy",
            /* record */[
              /* readPosDelta */1,
              /* writePosDelta */1,
              /* writePosOffset */0,
              /* audioInputSetting : PinkNoise */0,
              /* inputGain */1.0,
              /* outputGain */0.1,
              /* q */Audio$Gayer.defaultQ,
              /* transpose */0,
              /* shouldClear */true,
              /* layers */spacy
            ]
          ],
          /* :: */[
            /* tuple */[
              "Empty",
              /* record */[
                /* readPosDelta */1,
                /* writePosDelta */1,
                /* writePosOffset */0,
                /* audioInputSetting : PinkNoise */0,
                /* inputGain */1.0,
                /* outputGain */0.1,
                /* q */Audio$Gayer.defaultQ,
                /* transpose */0,
                /* shouldClear */true,
                /* layers : [] */0
              ]
            ],
            /* [] */0
          ]
        ]
      ]
    ]
  ]
];

var presets = /* :: */[
  presets_000,
  presets_001
];

var defaultTransform = Canvas$Gayer.defaultTransform;

export {
  defaultTransform ,
  baseLayer ,
  analyzer ,
  webcam ,
  slitscan ,
  reader ,
  pitchFilter ,
  fill ,
  img ,
  hubble ,
  spacy ,
  harmony ,
  allLayerTypes ,
  defaultParams ,
  harmonyParams ,
  harmonyIntensified ,
  feedback ,
  slitscanParams ,
  debussyFile ,
  debussy ,
  presets ,
  
}
/* hubble Not a pure module */
