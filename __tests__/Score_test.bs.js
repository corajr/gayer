// Generated by BUCKLESCRIPT VERSION 4.0.3, PLEASE EDIT WITH CARE

import * as Jest from "@glennsl/bs-jest/src/jest.js";
import * as $$Array from "bs-platform/lib/es6/array.js";
import * as Score$Gayer from "../src/Score.bs.js";
import * as Params$Gayer from "../src/Params.bs.js";

var exampleTransitions = /* :: */[
  /* Manual */0,
  /* [] */0
];

var exampleScoreEvents_000 = /* record */[
  /* params */Params$Gayer.defaultParams,
  /* transition : Manual */0,
  /* eventTitle */undefined
];

var exampleScoreEvents = /* :: */[
  exampleScoreEvents_000,
  /* [] */0
];

var exampleScores_000 = /* record */[
  /* events */$$Array.of_list(exampleScoreEvents),
  /* scoreMetadata : record */[
    /* title */"Example 1",
    /* authors : [] */0
  ]
];

var exampleScores = /* :: */[
  exampleScores_000,
  /* [] */0
];

describe("EncodeScore <=> DecodeScore", (function () {
        describe("transition", (function () {
                return Jest.testAll("decode inverts encode", exampleTransitions, (function (transition) {
                              return Jest.Expect[/* toEqual */12](transition, Jest.Expect[/* expect */0](Score$Gayer.DecodeScore[/* transition */0](Score$Gayer.EncodeScore[/* transition */0](transition))));
                            }));
              }));
        describe("scoreEvent", (function () {
                return Jest.testAll("decode inverts encode", exampleScoreEvents, (function (scoreEvent) {
                              return Jest.Expect[/* toEqual */12](scoreEvent, Jest.Expect[/* expect */0](Score$Gayer.DecodeScore[/* scoreEvent */1](Score$Gayer.EncodeScore[/* scoreEvent */1](scoreEvent))));
                            }));
              }));
        return Jest.testAll("decode inverts encode", exampleScores, (function (score) {
                      return Jest.Expect[/* toEqual */12](score, Jest.Expect[/* expect */0](Score$Gayer.DecodeScore[/* score */3](Score$Gayer.EncodeScore[/* score */3](score))));
                    }));
      }));

export {
  exampleTransitions ,
  exampleScoreEvents ,
  exampleScores ,
  
}
/* exampleScores Not a pure module */
